{"mappings":"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","sources":["<anon>","app.js","utils/appError.js","controllers/errorController.js","routes/tourRouter.js","controllers/tourController.js","models/tourModel.js","utils/catchAsync.js","controllers/handlerFactory.js","utils/APIFeatures.js","utils/deleteFile.js","controllers/authController.js","models/userModel.js","utils/email.js","routes/reviewRouter.js","controllers/reviewController.js","models/reviewModel.js","routes/userRouter.js","controllers/userController.js","routes/bookingRouter.js","controllers/bookingController.js","models/bookingModel.js"],"sourcesContent":["var $drGtS$path = require(\"path\");\nvar $drGtS$express = require(\"express\");\nvar $drGtS$morgan = require(\"morgan\");\nvar $drGtS$dotenv = require(\"dotenv\");\nvar $drGtS$expressratelimit = require(\"express-rate-limit\");\nvar $drGtS$helmet = require(\"helmet\");\nvar $drGtS$expressmongosanitize = require(\"express-mongo-sanitize\");\nvar $drGtS$xssclean = require(\"xss-clean\");\nvar $drGtS$hpp = require(\"hpp\");\nvar $drGtS$cors = require(\"cors\");\nvar $drGtS$cookieparser = require(\"cookie-parser\");\nvar $drGtS$compression = require(\"compression\");\nvar $drGtS$sharp = require(\"sharp\");\nvar $drGtS$multer = require(\"multer\");\nvar $drGtS$mongoose = require(\"mongoose\");\nvar $drGtS$slugify = require(\"slugify\");\nrequire(\"fs\");\nvar $drGtS$util = require(\"util\");\nvar $drGtS$jsonwebtoken = require(\"jsonwebtoken\");\nvar $drGtS$crypto = require(\"crypto\");\nvar $drGtS$validator = require(\"validator\");\nvar $drGtS$bcryptjs = require(\"bcryptjs\");\nvar $drGtS$nodemailer = require(\"nodemailer\");\nvar $drGtS$pug = require(\"pug\");\nvar $drGtS$htmltotext = require(\"html-to-text\");\nvar $drGtS$stripe = require(\"stripe\");\n\n\nvar $d625cecd33a9d787$var$$parcel$__dirname = $drGtS$path.resolve(__dirname, \"../../..\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar $8126ef366f855a8b$exports = {};\nclass $8126ef366f855a8b$var$AppError extends Error {\n    constructor(message, statusCode){\n        super(message);\n        this.statusCode = statusCode;\n        this.status = `${statusCode}`.startsWith(\"4\") ? \"Fail\" : \"Success\";\n        this.isOperational = true;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\n$8126ef366f855a8b$exports = $8126ef366f855a8b$var$AppError;\n\n\nvar $0298fd9c5984ce66$exports = {};\nconst $0298fd9c5984ce66$var$sendErrorDevlopment = (err, res)=>{\n    res.status(err.statusCode).json({\n        status: err.status,\n        error: err,\n        message: err.message,\n        stack: err.stack\n    });\n};\nconst $0298fd9c5984ce66$var$sendErrorProduction = (err, res)=>{\n    if (err.isOperational) res.status(err.statusCode).json({\n        status: err.status,\n        message: err.message\n    });\n    else res.status(500).json({\n        status: \"Error\",\n        mesage: \"Something went very wrong!\"\n    });\n};\nconst $0298fd9c5984ce66$var$handleCastErrorDB = (err, res)=>{\n    res.status(400).json({\n        status: \"Error\",\n        message: `Input id (${err.value}) is incorrect!`\n    });\n};\nconst $0298fd9c5984ce66$var$handleUniquenessErroDB = (err, res)=>{\n    const fieldValue = Object.keys(err.errorResponse.keyPattern)[0];\n    res.status(400).json({\n        status: \"Error\",\n        message: `The input for field: ${fieldValue} (${err.errorResponse.keyValue[fieldValue]}) shoud be unique, please chose another!`\n    });\n};\nconst $0298fd9c5984ce66$var$handleValidationErrorDB = (err, res)=>{\n    const errorFields = Object.keys(err.errors);\n    const errorMessages = {};\n    errorFields.forEach((field)=>errorMessages[field] = err.errors[field]?.message);\n    res.status(400).json({\n        status: \"Error\",\n        message: errorMessages\n    });\n};\nconst $0298fd9c5984ce66$var$handleJwtSignatureError = (err, res)=>{\n    res.status(401).json({\n        status: \"Error\",\n        message: \"Invalid JWT Signature!\"\n    });\n};\nconst $0298fd9c5984ce66$var$handleJwtExpirationError = (err, res)=>{\n    res.status(401).json({\n        status: \"Error\",\n        message: \"Token expired\"\n    });\n};\n$0298fd9c5984ce66$exports = (err, req, res, next)=>{\n    err.statusCode = err.statusCode || 500;\n    err.status = err.status || \"error\";\n    if (err?.name === \"CastError\") $0298fd9c5984ce66$var$handleCastErrorDB(err, res);\n    else if (err.name === \"TokenExpiredError\") $0298fd9c5984ce66$var$handleJwtExpirationError(err, res);\n    else if (err.name === \"JsonWebTokenError\") $0298fd9c5984ce66$var$handleJwtSignatureError(err, res);\n    else if (err?.errorResponse?.code === 11000) $0298fd9c5984ce66$var$handleUniquenessErroDB(err, res);\n    else if (err?.name === \"ValidationError\") $0298fd9c5984ce66$var$handleValidationErrorDB(err, res);\n    else process.env.NODE_ENV === \"production\" ? $0298fd9c5984ce66$var$sendErrorDevlopment(err, res) : $0298fd9c5984ce66$var$sendErrorProduction(err, res);\n};\n\n\nvar $6f3a8b2bb9a5a886$exports = {};\n\nvar $4b0530f0db6c92c2$export$b4cc9a7f549f80be;\nvar $4b0530f0db6c92c2$export$3f01106131746282;\nvar $4b0530f0db6c92c2$export$50d3287e26916b45;\nvar $4b0530f0db6c92c2$export$95c4b71b6433cd9b;\nvar $4b0530f0db6c92c2$export$1b246d2f2efdafde;\nvar $4b0530f0db6c92c2$export$d69096d795185aac;\nvar $4b0530f0db6c92c2$export$bfbdf151c05dbde1;\nvar $4b0530f0db6c92c2$export$a2d3e092b567a307;\nvar $4b0530f0db6c92c2$export$9f2360ce38e60765;\nvar $4b0530f0db6c92c2$export$e56d289ae250f301;\nvar $0a0cb2471ded67f3$exports = {};\n\n\nconst $0a0cb2471ded67f3$var$tourSchema = $drGtS$mongoose.Schema({\n    slug: {\n        type: String\n    },\n    name: {\n        required: [\n            true,\n            \"Tour name is required!\"\n        ],\n        minLength: [\n            5,\n            `Minimum length is 20 char!`\n        ],\n        maxLength: [\n            40,\n            `Maximum length is 40 char!`\n        ],\n        type: String,\n        unique: true,\n        trim: true\n    },\n    duration: {\n        type: Number,\n        required: [\n            true,\n            `Duration is required`\n        ],\n        min: [\n            1,\n            `Duration must be minimum 1 day!`\n        ]\n    },\n    difficulty: {\n        type: String,\n        required: [\n            true,\n            `Difficulty is required`\n        ],\n        enum: {\n            values: [\n                \"easy\",\n                \"difficult\",\n                \"medium\"\n            ],\n            message: \"Difficult must be either easy, difficult or medium!\"\n        }\n    },\n    ratingsAverage: {\n        type: Number,\n        default: 4.5,\n        min: [\n            1,\n            `Rating must be higher than 1.`\n        ],\n        max: [\n            5,\n            \"Rating must be below 5\"\n        ]\n    },\n    ratingsQuantity: {\n        type: Number,\n        default: 0\n    },\n    price: {\n        type: Number,\n        required: [\n            true,\n            `Price is required`\n        ],\n        min: [\n            1,\n            `Price must be minimum 1`\n        ],\n        max: [\n            15000,\n            \"Price must be below 15000\"\n        ]\n    },\n    maxGroupSize: {\n        type: Number,\n        required: [\n            true,\n            `Max group size is required`\n        ],\n        min: [\n            1,\n            `Min group size is 1`\n        ],\n        max: [\n            100,\n            \"Max group size is 10\"\n        ],\n        default: 1\n    },\n    summary: {\n        type: String,\n        trim: true,\n        required: [\n            true,\n            `Summary is required`\n        ],\n        minLength: [\n            1,\n            `Summary  minimum length is 1`\n        ],\n        maxLength: [\n            255,\n            \"Summary maximum length is 255\"\n        ]\n    },\n    description: {\n        type: String,\n        trim: true,\n        minLength: [\n            10,\n            `description minimum length is 10`\n        ],\n        maxLength: [\n            1700,\n            `description maximum length is 700`\n        ]\n    },\n    imageCover: {\n        type: String,\n        trim: true,\n        required: [\n            true,\n            `Image cover is required`\n        ]\n    },\n    images: {\n        required: [\n            true,\n            `images are required`\n        ],\n        type: [\n            String\n        ]\n    },\n    startDates: {\n        required: [\n            true,\n            \"Start dates are required\"\n        ],\n        type: [\n            Date\n        ]\n    },\n    priceDiscount: {\n        type: Number,\n        validate: {\n            validator: function(value) {\n                this.price;\n            },\n            message: `Discount price must be lower then ({VALUE})`\n        }\n    },\n    secretTour: {\n        type: Boolean,\n        default: false\n    },\n    startLocation: {\n        type: {\n            type: String,\n            default: `Point`,\n            enum: [\n                \"Point\"\n            ]\n        },\n        coordinates: [\n            Number\n        ],\n        address: String,\n        description: String\n    },\n    locations: [\n        {\n            type: {\n                type: String,\n                default: \"Point\",\n                enum: [\n                    `Point`\n                ]\n            },\n            cordinates: [\n                Number\n            ],\n            address: String,\n            description: String,\n            day: Number\n        }\n    ],\n    guides: [\n        {\n            type: $drGtS$mongoose.Schema.ObjectId,\n            ref: \"User\"\n        }\n    ]\n}, {\n    toJSON: {\n        virtuals: true,\n        getter: true\n    },\n    toObject: {\n        virtuals: true,\n        getter: true\n    }\n});\n$0a0cb2471ded67f3$var$tourSchema.index({\n    slug: 1\n});\n$0a0cb2471ded67f3$var$tourSchema.index({\n    price: 1,\n    ratingsAverage: -1\n});\n$0a0cb2471ded67f3$var$tourSchema.virtual(\"durationInWeeks\").get(function() {\n    return this.duration / 7;\n});\n$0a0cb2471ded67f3$var$tourSchema.virtual(\"reviews\", {\n    ref: \"Review\",\n    foreignField: \"tour\",\n    localField: \"_id\"\n});\n// DOCUMENT MIDDLEWARE\n$0a0cb2471ded67f3$var$tourSchema.pre(\"save\", function(next) {\n    this.slug = $drGtS$slugify(this.name, {\n        lower: true\n    });\n    next();\n});\n// QUERY MIDDLEWARE WITH EXPRESSSION\n$0a0cb2471ded67f3$var$tourSchema.pre(/^find/, function(next) {\n    this.start = Date.now();\n    next();\n});\n$0a0cb2471ded67f3$var$tourSchema.pre(/^find/, function(next) {\n    this.populate({\n        path: \"guides\"\n    }).select(\"-_v\");\n    next();\n});\n$0a0cb2471ded67f3$var$tourSchema.post(/^find/, function(documents, next) {\n    console.log(`Query took ${this.start - Date.now()}`);\n    next();\n});\n// AGGREGATION MIDDLEWARE\n$0a0cb2471ded67f3$var$tourSchema.pre(\"aggregate\", function(next) {\n    this.pipeline().unshift({\n        $match: {\n            secretTour: {\n                $ne: false\n            }\n        }\n    });\n    next();\n});\nconst $0a0cb2471ded67f3$var$Tour = $drGtS$mongoose.model(\"Tour\", $0a0cb2471ded67f3$var$tourSchema);\n$0a0cb2471ded67f3$exports = $0a0cb2471ded67f3$var$Tour;\n\n\nvar $3b428b33c352f09e$exports = {};\n$3b428b33c352f09e$exports = (fn)=>{\n    return (req, res, next)=>{\n        fn(req, res, next).catch(next);\n    };\n};\n\n\nvar $08221df7480992de$export$36a479340da3c347;\nvar $08221df7480992de$export$3220ead45e537228;\nvar $08221df7480992de$export$5d49599920443c31;\nvar $08221df7480992de$export$a541876d5d7daf90;\nvar $08221df7480992de$export$18200ea6c8035394;\n\n\nvar $1577ff2434c4d1ff$exports = {};\n$1577ff2434c4d1ff$exports = class APIFeatures {\n    constructor(queryObject, query){\n        this.queryObject = queryObject;\n        this.query = query;\n    }\n    filter() {\n        const fieldToExclude = [\n            \"page\",\n            \"limit\",\n            \"sort\",\n            \"fields\"\n        ];\n        const queryObject = {\n            ...this.queryObject\n        };\n        fieldToExclude.forEach((field)=>delete queryObject[field]);\n        let queryStr = JSON.stringify(queryObject).replace(/\\b(gte|gt|lt|lte|eq|ne)\\b/, (match)=>`$${match}`);\n        this.query = this.query.find(JSON.parse(queryStr));\n        return this;\n    }\n    sort() {\n        if (this.queryObject.sort) {\n            const sortBy = this.queryObject.sort.split(\",\").join(\" \");\n            this.query = this.query.sort(sortBy);\n        } else this.query = this.query.sort(\"-createdAt\");\n        return this;\n    }\n    limitFields() {\n        if (this.queryObject.fields) {\n            const fieldToSelect = this.queryObject.fields.split(\",\").join(\" \");\n            this.query = this.query.select(fieldToSelect);\n        }\n        return this;\n    }\n    paginate() {\n        const page = this.queryObject.page * 1 || 1;\n        const limit = this.queryObject.limit * 1 || 10;\n        const skip = (page - 1) * limit;\n        this.query = this.query.skip(skip).limit(limit);\n        return this;\n    }\n};\n\n\n$08221df7480992de$export$36a479340da3c347 = (Model)=>{\n    return $3b428b33c352f09e$exports(async (req, res, next)=>{\n        const doc = await Model.findByIdAndDelete(req.params.id);\n        if (!doc) return next(new $8126ef366f855a8b$exports(`No document found with id ${req.params.id}!`, 404));\n        res.status(204).json({\n            status: \"success\",\n            data: null\n        });\n    });\n};\n$08221df7480992de$export$3220ead45e537228 = (Model)=>{\n    return $3b428b33c352f09e$exports(async (req, res, next)=>{\n        const document = await Model.findByIdAndUpdate(req.params.id, req.body, {\n            new: true,\n            runValidators: true\n        });\n        if (!document) return next(new $8126ef366f855a8b$exports(`Document with id ${req.params.id} doesnt exists!`, 404));\n        res.status(200).json({\n            status: \"success\",\n            data: {\n                data: document\n            }\n        });\n    });\n};\n$08221df7480992de$export$5d49599920443c31 = (Model)=>{\n    return $3b428b33c352f09e$exports(async (req, res, next)=>{\n        const document = await Model.create(req.body);\n        res.status(201).json({\n            status: \"success\",\n            data: {\n                data: document\n            }\n        });\n    });\n};\n$08221df7480992de$export$a541876d5d7daf90 = (Model, populateOptions)=>{\n    return $3b428b33c352f09e$exports(async (req, res, next)=>{\n        let query = Model.findById(req.params.id);\n        if (populateOptions) query.populate(populateOptions);\n        const data = await query;\n        if (!data) return next(new $8126ef366f855a8b$exports(`Document with id ${req.params.id} doesnt exist's!`, 404));\n        res.status(200).json({\n            status: \"success\",\n            data: {\n                data: data\n            }\n        });\n    });\n};\n$08221df7480992de$export$18200ea6c8035394 = (Model)=>{\n    return $3b428b33c352f09e$exports(async (req, res, next)=>{\n        let filter = {};\n        if (req.params.tourId) filter = {\n            tour: req.params.tourId\n        };\n        const features = new $1577ff2434c4d1ff$exports(req.query, Model.find(filter)).filter().sort().limitFields().paginate();\n        const documents = await features.query;\n        const totalDocuments = await Model.countDocuments(filter);\n        res.status(200).json({\n            status: \"success\",\n            results: totalDocuments,\n            totalPages: Math.ceil(totalDocuments / req.query.limit || 6),\n            data: {\n                documents: documents\n            }\n        });\n    });\n};\n\n\n\n\n\nvar $86a232f75d8a24d5$exports = {};\n\nvar $86a232f75d8a24d5$var$$parcel$__dirname = $drGtS$path.resolve(__dirname, \"../../../utils\");\n\n$86a232f75d8a24d5$exports = function(fileName) {\n    file.unlink(`${$86a232f75d8a24d5$var$$parcel$__dirname}/public/img/tours/${fileName}`, (err)=>{\n        if (err) console.error(`Fail to delete file on path: ${fileName}`);\n    });\n};\n\n\nconst $4b0530f0db6c92c2$var$multerStorage = $drGtS$multer.memoryStorage();\nconst $4b0530f0db6c92c2$var$multerFilter = (req, file, cb)=>{\n    if (file.mimetype.startsWith(\"image\")) cb(null, true);\n    else cb(new $8126ef366f855a8b$exports(\"Only images are supported\", 400), false);\n};\nconst $4b0530f0db6c92c2$var$upload = $drGtS$multer({\n    storage: $4b0530f0db6c92c2$var$multerStorage,\n    fileFilter: $4b0530f0db6c92c2$var$multerFilter\n});\n$4b0530f0db6c92c2$export$b4cc9a7f549f80be = $4b0530f0db6c92c2$var$upload.fields([\n    {\n        name: \"imageCover\",\n        maxCount: 1\n    },\n    {\n        name: \"images\",\n        maxCount: 3\n    }\n]);\n$4b0530f0db6c92c2$export$3f01106131746282 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    if (!req.files.imageCover && !req.files.images) return next();\n    if (req.files.imageCover) {\n        req.body.imageCover = `tour-${req.params.tourId}-${Date.now()}-cover.jpeg`;\n        await $drGtS$sharp(req.files.imageCover[0].buffer).resize(2000, 1333).toFormat(\"jpeg\").jpeg({\n            quality: 90\n        }).toFile(`public/img/tours/${req.body.imageCover}`);\n    }\n    if (req.files.images) {\n        req.body.images = [];\n        await Promise.all(req.files.images.map(async (file, index)=>{\n            const fileName = `tour-${req.params.tourId}-${Date.now()}-${index + 1}.jpeg`;\n            await $drGtS$sharp(file.buffer).resize(2000, 1333).toFormat(\"jpeg\").jpeg({\n                quality: 90\n            }).toFile(`public/img/tours/${fileName}`);\n            req.body.images.push(fileName);\n        }));\n    }\n    next();\n});\n$4b0530f0db6c92c2$export$50d3287e26916b45 = $08221df7480992de$export$36a479340da3c347($0a0cb2471ded67f3$exports);\n$4b0530f0db6c92c2$export$95c4b71b6433cd9b = $08221df7480992de$export$a541876d5d7daf90($0a0cb2471ded67f3$exports, {\n    path: \"reviews\",\n    select: \"-tour\"\n});\n$4b0530f0db6c92c2$export$1b246d2f2efdafde = $08221df7480992de$export$18200ea6c8035394($0a0cb2471ded67f3$exports);\n$4b0530f0db6c92c2$export$d69096d795185aac = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const tour = JSON.parse(req.body.tour);\n    let oldImages;\n    let oldImageCover;\n    if (req.body.images) {\n        if (tour?.images) oldImages = {\n            ...tour.images\n        };\n        tour.images = req.body.images;\n    }\n    if (req.body.imageCover) {\n        if (tour?.imageCover) oldImageCover = tour.imageCover;\n        tour.imageCover = req.body.imageCover;\n    }\n    let savedOrUpdatedTour;\n    if (tour._id) savedOrUpdatedTour = await $0a0cb2471ded67f3$exports.findByIdAndUpdate(tour._id, tour, {\n        new: true,\n        runValidators: true\n    });\n    else savedOrUpdatedTour = await $0a0cb2471ded67f3$exports.create(tour);\n    if (!savedOrUpdatedTour) {\n        req.body?.images.forEach((image)=>$86a232f75d8a24d5$exports(image));\n        req.body?.imageCover && $86a232f75d8a24d5$exports(req.body.imageCover);\n        return next(new $8126ef366f855a8b$exports(`There is no tour with id ${req.params.id}`, 404));\n    } else {\n        oldImages?.forEach?.((image)=>$86a232f75d8a24d5$exports(image));\n        oldImageCover && $86a232f75d8a24d5$exports(oldImageCover);\n    }\n    res.status(tour._id ? 200 : 201).json({\n        status: \"success\",\n        data: {\n            document: savedOrUpdatedTour\n        }\n    });\n});\n$4b0530f0db6c92c2$export$bfbdf151c05dbde1 = async (req, res, next)=>{\n    req.query = {\n        limit: \"5\",\n        sort: \"price,-raitingsAverage\"\n    };\n    req.query.fields = \"price,name,difficulty,ratingsAverage\";\n    next();\n};\n$4b0530f0db6c92c2$export$a2d3e092b567a307 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const stats = await $0a0cb2471ded67f3$exports.aggregate([\n        {\n            $match: {\n                ratingsAverage: {\n                    $gte: 4.4\n                }\n            }\n        },\n        {\n            $group: {\n                _id: {\n                    $toUpper: `$difficulty`\n                },\n                num: {\n                    $sum: 1\n                },\n                numRatings: {\n                    $sum: `$ratingsQuantity`\n                },\n                avgPrice: {\n                    $avg: `$price`\n                },\n                minPrice: {\n                    $min: `$price`\n                },\n                maxPrice: {\n                    $max: `$price`\n                }\n            }\n        }\n    ]);\n    res.status(200).json({\n        status: `success`,\n        data: {\n            stats: stats\n        }\n    });\n});\n$4b0530f0db6c92c2$export$9f2360ce38e60765 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const year = req.params.year * 1;\n    const plan = await $0a0cb2471ded67f3$exports.aggregate([\n        {\n            $unwind: `$startDates`\n        },\n        {\n            $match: {\n                startDates: {\n                    $gte: new Date(`${year}-1-1`),\n                    $lte: new Date(`${year}-12-31`)\n                }\n            }\n        },\n        {\n            $group: {\n                _id: {\n                    $month: \"$startDates\"\n                },\n                sum: {\n                    $sum: 1\n                },\n                tours: {\n                    $push: `$name`\n                }\n            }\n        },\n        {\n            $addFields: {\n                month: `$_id`\n            }\n        },\n        {\n            $project: {\n                _id: 0\n            }\n        },\n        {\n            $sort: {\n                sum: -1\n            }\n        },\n        {\n            $limit: 12\n        }\n    ]);\n    res.status(200).json({\n        status: `success`,\n        results: plan.length,\n        data: {\n            plan: plan\n        }\n    });\n});\n$4b0530f0db6c92c2$export$e56d289ae250f301 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const tour = await $0a0cb2471ded67f3$exports.findOne({\n        slug: req.params.slug\n    }).populate([\n        {\n            path: \"reviews\",\n            select: \"-tour\"\n        }\n    ]);\n    if (!tour) return next(new $8126ef366f855a8b$exports(`Tour with slug ${req.params.slug} doesnt exists!`, 404));\n    res.status(200).json({\n        status: `success`,\n        data: {\n            tour: tour\n        }\n    });\n});\n\n\nvar $6f3a8b2bb9a5a886$require$getAllTours = $4b0530f0db6c92c2$export$1b246d2f2efdafde;\nvar $6f3a8b2bb9a5a886$require$getTour = $4b0530f0db6c92c2$export$95c4b71b6433cd9b;\nvar $6f3a8b2bb9a5a886$require$createOrUpdateTour = $4b0530f0db6c92c2$export$d69096d795185aac;\nvar $6f3a8b2bb9a5a886$require$getTop5Cheap = $4b0530f0db6c92c2$export$bfbdf151c05dbde1;\nvar $6f3a8b2bb9a5a886$require$deleteTourById = $4b0530f0db6c92c2$export$50d3287e26916b45;\nvar $6f3a8b2bb9a5a886$require$getTourStats = $4b0530f0db6c92c2$export$a2d3e092b567a307;\nvar $6f3a8b2bb9a5a886$require$getMonthlyPlan = $4b0530f0db6c92c2$export$9f2360ce38e60765;\nvar $6f3a8b2bb9a5a886$require$getTourBySlag = $4b0530f0db6c92c2$export$e56d289ae250f301;\nvar $6f3a8b2bb9a5a886$require$uploadTourImages = $4b0530f0db6c92c2$export$b4cc9a7f549f80be;\nvar $6f3a8b2bb9a5a886$require$resizeTourImages = $4b0530f0db6c92c2$export$3f01106131746282;\nvar $1e320d355e538560$export$cf64224bcd829024;\nvar $1e320d355e538560$export$596d806903d1f59e;\nvar $1e320d355e538560$export$eda7ca9e36571553;\nvar $1e320d355e538560$export$e1bac762c84d3b0c;\nvar $1e320d355e538560$export$66791fb2cfeec3e;\nvar $1e320d355e538560$export$dc726c8e334dd814;\nvar $1e320d355e538560$export$e2853351e15b7895;\nvar $1e320d355e538560$export$e8df664d4863167e;\n\nvar $1e320d355e538560$require$promisify = $drGtS$util.promisify;\nvar $ac6ef53db338fdf8$exports = {};\n\n\n\n\nconst $ac6ef53db338fdf8$var$userSchema = $drGtS$mongoose.Schema({\n    name: {\n        type: String,\n        trim: true,\n        required: [\n            true,\n            `Name is required!`\n        ],\n        minLength: [\n            2,\n            `Minimum length for name is 2 Characters`\n        ],\n        maxLength: [\n            20,\n            `Maximum length for name is 20 Characters`\n        ]\n    },\n    email: {\n        type: String,\n        required: [\n            true,\n            `Email is required!`\n        ],\n        unique: true,\n        trim: true,\n        lowerCase: true,\n        validate: [\n            $drGtS$validator.isEmail,\n            `Please provide a valid email address`\n        ]\n    },\n    photo: {\n        type: String,\n        trim: true\n    },\n    password: {\n        type: String,\n        required: [\n            true,\n            `Password is required!`\n        ],\n        minLength: [\n            8,\n            `Minimum length for password is 8 characters`\n        ],\n        maxLength: [\n            100,\n            `Maximum length for password is 20 characters`\n        ],\n        trim: true,\n        select: false\n    },\n    role: {\n        type: String,\n        enum: [\n            \"user\",\n            \"guide\",\n            \"lead-guide\",\n            \"admin\"\n        ],\n        default: \"user\"\n    },\n    passwordConfirm: {\n        type: String,\n        required: [\n            true,\n            `Password is required!`\n        ],\n        minLength: [\n            8,\n            `Minimum length for password is 8 characters`\n        ],\n        maxLength: [\n            20,\n            `Maximum length for password is 20 characters`\n        ],\n        trim: true,\n        validate: {\n            validator: function(value) {\n                return this.password == value;\n            },\n            message: \"Password must match!\"\n        }\n    },\n    passwordChangedAt: {\n        type: Date\n    },\n    passwordResetToken: String,\n    passwordResetExpires: Date,\n    active: {\n        type: Boolean,\n        default: true,\n        select: false\n    }\n});\n$ac6ef53db338fdf8$var$userSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(`password`)) return next();\n    this.password = await $drGtS$bcryptjs.hash(this.password, 12);\n    this.passwordConfirm = undefined;\n    next();\n});\n$ac6ef53db338fdf8$var$userSchema.pre(\"save\", async function(next) {\n    if (this.isModified(`password`) || this.isNew) return next();\n    this.passwordChangedAt = Date.now() - 5000;\n    next();\n});\n$ac6ef53db338fdf8$var$userSchema.methods.correctPassword = async function(candidatePassword, userPassword) {\n    return await $drGtS$bcryptjs.compare(candidatePassword, userPassword);\n};\n$ac6ef53db338fdf8$var$userSchema.methods.changePasswordAfter = async function(JWTTimeStamp) {\n    if (this.passwordChangedAt) {\n        const changedTimestamp = parseInt(this.passwordChangedAt.getTime() / 1000, 10);\n        return JWTTimeStamp < changedTimestamp;\n    }\n    return false;\n};\n$ac6ef53db338fdf8$var$userSchema.methods.createPasswordResetToken = function() {\n    const resetToken = $drGtS$crypto.randomBytes(32).toString(\"hex\");\n    this.passwordResetToken = $drGtS$crypto.createHash(\"sha-256\").update(resetToken).digest(`hex`);\n    this.passwordResetExpires = Date.now() + 600000;\n    // console.log(this.passwordResetToken, { resetToken });\n    return resetToken;\n};\n$ac6ef53db338fdf8$var$userSchema.methods.cryptToken = function(token) {\n    return $drGtS$crypto.createHash(\"sha-256\").update(token).digest(\"hex\");\n};\n$ac6ef53db338fdf8$var$userSchema.pre(/^find/, function(next) {\n    this.find({\n        active: true\n    });\n    next();\n});\nconst $ac6ef53db338fdf8$var$User = $drGtS$mongoose.model(\"User\", $ac6ef53db338fdf8$var$userSchema);\n$ac6ef53db338fdf8$exports = $ac6ef53db338fdf8$var$User;\n\n\n\n\n\n\nvar $7a8f20b4fa4383dd$exports = {};\n\nvar $7a8f20b4fa4383dd$var$$parcel$__dirname = $drGtS$path.resolve(__dirname, \"../../../utils\");\n\n\n\nvar $7a8f20b4fa4383dd$require$convert = $drGtS$htmltotext.convert;\n$7a8f20b4fa4383dd$exports = class Email {\n    constructor(user, url){\n        this.to = user.email;\n        this.firstName = user.name.split(\" \")[0];\n        this.url = url;\n        this.from = `Boris Dimitrijevic <${process.env.EMAIL_FROM}>`;\n    }\n    createTransport() {\n        var transport;\n        if (process.env.ENV_NODE === \"production\") transport = $drGtS$nodemailer.createTransport({\n            host: \"\",\n            port: \"\",\n            auth: {\n                user: \"\",\n                pass: \"\"\n            }\n        });\n        else transport = $drGtS$nodemailer.createTransport({\n            // service\n            host: \"sandbox.smtp.mailtrap.io\",\n            port: 2525,\n            auth: {\n                user: \"e2f3c47e010096\",\n                pass: \"a86b71d0b84b74\"\n            }\n        });\n        return transport;\n    }\n    async send(template, subject) {\n        const html = $drGtS$pug.renderFile(`${$7a8f20b4fa4383dd$var$$parcel$__dirname}/../views/email/${template}.pug`, {\n            firstName: this.firstName,\n            url: this.url,\n            subject: subject\n        });\n        const mailOptions = {\n            from: this.from,\n            to: this.to,\n            html: html,\n            subject: subject,\n            text: $7a8f20b4fa4383dd$require$convert(html)\n        };\n        await this.createTransport().sendMail(mailOptions);\n    }\n    async sendWelcome() {\n        await this.send(\"welcome\", \"Welcome to the Tours family!\");\n    }\n    async sendPasswordReset() {\n        await this.send(\"passwordReset\", `Forgot your password? \r\n       Visit link:  ${this.url}\\nIf u didnt forget your password please ignore this email`);\n    }\n};\n\n\nconst $1e320d355e538560$var$signToken = (id)=>{\n    return $drGtS$jsonwebtoken.sign({\n        id: id\n    }, process.env.JWT_SECRET, {\n        expiresIn: process.env.JWT_EXPIRES_IN\n    });\n};\nconst $1e320d355e538560$var$createAndSendToken = (user, statusCode, res)=>{\n    user.password = undefined;\n    const token = $1e320d355e538560$var$signToken(user._id);\n    const cookieOptions = {\n        secure: false,\n        httpOnly: true,\n        expire: Date.now() + process.env.JWT_EXPIRES_IN || 86400000\n    };\n    res.cookie(\"jwt\", token, cookieOptions);\n    res.status(statusCode).json({\n        status: \"success\",\n        token: token,\n        user: user\n    });\n};\n$1e320d355e538560$export$cf64224bcd829024 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const newUser = await $ac6ef53db338fdf8$exports.create({\n        name: req.body.name,\n        password: req.body.password,\n        passwordConfirm: req.body.passwordConfirm,\n        email: req.body.email\n    });\n    if (!newUser) return next(new $8126ef366f855a8b$exports(\"Fail to signup!\", 400));\n    const url = `${req.protocol}://${req.get(`host`)}://account`;\n    await new $7a8f20b4fa4383dd$exports(newUser, url).sendWelcome();\n    $1e320d355e538560$var$createAndSendToken(newUser, 201, res);\n});\n$1e320d355e538560$export$596d806903d1f59e = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const { email: email, password: password } = req.body;\n    if (!email || !password) return next(new $8126ef366f855a8b$exports(`Please provide email and password`, 400));\n    const user = await $ac6ef53db338fdf8$exports.findOne({\n        email: email\n    }).select(\"+password\");\n    if (!user || !await user.correctPassword(password, user.password)) return next(new $8126ef366f855a8b$exports(`Invalid email or password`, 401));\n    $1e320d355e538560$var$createAndSendToken(user, 200, res);\n});\n$1e320d355e538560$export$eda7ca9e36571553 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    let token;\n    if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer \")) token = req.headers.authorization.split(\" \")[1];\n    else if (req.cookies.jwt) token = req.cookies.jwt;\n    if (!token) return next(new $8126ef366f855a8b$exports(`Invalid token`, 401));\n    const decoded = await $1e320d355e538560$require$promisify($drGtS$jsonwebtoken.verify)(token, process.env.JWT_SECRET);\n    const currentUser = await $ac6ef53db338fdf8$exports.findById(decoded.id);\n    if (!currentUser) return next(new $8126ef366f855a8b$exports(`The user belonging to the token doesnt not exists anymore!`, 401));\n    if (await currentUser.changePasswordAfter(decoded.iat)) return next(new $8126ef366f855a8b$exports(`Recently password has been changed! Please login again! `, 401));\n    req.user = currentUser;\n    next();\n});\n$1e320d355e538560$export$e1bac762c84d3b0c = (...roles)=>{\n    return (req, res, next)=>{\n        if (!roles.includes(req.user.role)) return next(new $8126ef366f855a8b$exports(\"You dont have permission to peform this action!\", 403), 403);\n        next();\n    };\n};\n$1e320d355e538560$export$66791fb2cfeec3e = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const user = await $ac6ef53db338fdf8$exports.findOne({\n        email: req.body.email\n    });\n    if (!user) return next(new $8126ef366f855a8b$exports(\"Wrong email adress!\"), 404);\n    const resetToken = user.createPasswordResetToken();\n    await user.save({\n        validateBeforeSave: false\n    });\n    try {\n        const resetUrl = `${req.get(\"origin\")}/forgotPassword/${resetToken}`;\n        await new $7a8f20b4fa4383dd$exports(user, resetUrl).sendPasswordReset();\n    } catch (error) {\n        user.passwordResetToken = undefined;\n        user.passwordResetExpires = undefined;\n        await user.save({\n            validateBeforeSave: false\n        });\n        return next(new $8126ef366f855a8b$exports(\"There was an error sending the email. Please try again\", 500));\n    }\n    res.status(200).json({\n        status: \"success\",\n        message: \"Token sent to email\"\n    });\n});\n$1e320d355e538560$export$dc726c8e334dd814 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const cryptedToken = $drGtS$crypto.createHash(\"sha-256\").update(req.params.token).digest(`hex`);\n    const user = await $ac6ef53db338fdf8$exports.findOne({\n        passwordResetToken: cryptedToken,\n        passwordResetExpires: {\n            $gt: Date.now()\n        }\n    });\n    if (!user) return next(new $8126ef366f855a8b$exports(\"Invalid token recived!\", 400));\n    const { password: password, passwordConfirm: passwordConfirm } = req.body;\n    user.passwordResetExpires = undefined;\n    user.passwordResetToken = undefined;\n    user.password = password;\n    user.passwordConfirm = passwordConfirm;\n    await user.save();\n    $1e320d355e538560$var$createAndSendToken(user, 200, res);\n});\n$1e320d355e538560$export$e2853351e15b7895 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const { oldPassword: oldPassword, password: password, passwordConfirm: passwordConfirm } = req.body;\n    const loggedUser = await $ac6ef53db338fdf8$exports.findById(req.user._id).select(\"+password\");\n    if (!await req.user.correctPassword(oldPassword, loggedUser.password)) next(new $8126ef366f855a8b$exports(\"Invalid password!\", 400));\n    loggedUser.password = password;\n    loggedUser.passwordConfirm = passwordConfirm;\n    await loggedUser.save();\n    $1e320d355e538560$var$createAndSendToken(loggedUser, 200, res);\n});\n$1e320d355e538560$export$e8df664d4863167e = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    res.cookie(\"jwt\", \"\", {\n        expires: new Date(0)\n    });\n    res.status(200).json({\n        status: \"success\",\n        message: \"Successfully logged out\"\n    });\n});\n\n\nvar $6f3a8b2bb9a5a886$require$protect = $1e320d355e538560$export$eda7ca9e36571553;\nvar $6f3a8b2bb9a5a886$require$restrictTo = $1e320d355e538560$export$e1bac762c84d3b0c;\nvar $0a75861df4d08a91$exports = {};\n\nvar $96fcd635098cdec2$export$7019c694ef9e681d;\nvar $96fcd635098cdec2$export$c3d3086f9027c35a;\nvar $96fcd635098cdec2$export$e608de25c1f33a63;\nvar $96fcd635098cdec2$export$757c0bd9156f0e39;\nvar $96fcd635098cdec2$export$122fa6d5636ec306;\nvar $96fcd635098cdec2$export$189a68d831f3e4ec;\nvar $3a32068f0afde828$exports = {};\n\n\nconst $3a32068f0afde828$var$reviewSchema = $drGtS$mongoose.Schema({\n    review: {\n        type: String,\n        trim: true,\n        required: [\n            true,\n            `Review is required`\n        ],\n        minLength: [\n            10,\n            `Minimum length is 10 characters`\n        ]\n    },\n    rating: {\n        type: Number,\n        required: [\n            true,\n            `Rating is required`\n        ],\n        min: [\n            1,\n            `Minimum value is 1`\n        ],\n        max: [\n            5,\n            `Minimum value is 5`\n        ]\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now()\n    },\n    tour: {\n        type: $drGtS$mongoose.Schema.ObjectId,\n        ref: \"Tour\",\n        required: [\n            true,\n            `Review must belong to a tour`\n        ]\n    },\n    user: {\n        type: $drGtS$mongoose.Schema.ObjectId,\n        ref: \"User\",\n        required: [\n            true,\n            `Review must belong to a user`\n        ]\n    }\n}, {\n    toJSON: {\n        virtuals: true\n    },\n    toObject: {\n        virtuals: true\n    }\n});\n$3a32068f0afde828$var$reviewSchema.index({\n    tour: 1,\n    user: 1\n}, {\n    unique: true\n});\n$3a32068f0afde828$var$reviewSchema.pre(/^find/, function(next) {\n    this.populate([\n        {\n            path: \"user\",\n            select: \"name photo\"\n        },\n        {\n            path: \"tour\",\n            select: \"name\"\n        }\n    ]).select(\"-__v\");\n    next();\n});\n$3a32068f0afde828$var$reviewSchema.statics.calculateAverageRating = async function(tourId) {\n    const stats = await this.aggregate([\n        {\n            $match: {\n                tour: tourId\n            }\n        },\n        {\n            $group: {\n                _id: \"$tour\",\n                numberOfRatings: {\n                    $sum: 1\n                },\n                avgRating: {\n                    $avg: \"$rating\"\n                }\n            }\n        }\n    ]);\n    await $0a0cb2471ded67f3$exports.findByIdAndUpdate(tourId, {\n        ratingsQuantity: stats[0]?.numberOfRatings || 0,\n        averageRating: stats[0]?.avgRating || 0\n    });\n};\n$3a32068f0afde828$var$reviewSchema.post(\"save\", async function() {\n    this.constructor.calculateAverageRating(this.tour);\n});\n$3a32068f0afde828$var$reviewSchema.post(/^findOneAnd/, async function(doc) {\n    console.log(doc);\n    if (doc) await doc.constructor.calculateAverageRating(doc?.tour._id);\n});\nconst $3a32068f0afde828$var$Review = $drGtS$mongoose.model(\"Review\", $3a32068f0afde828$var$reviewSchema);\n$3a32068f0afde828$exports = $3a32068f0afde828$var$Review;\n\n\n\n\n\n\n$96fcd635098cdec2$export$7019c694ef9e681d = $08221df7480992de$export$3220ead45e537228($3a32068f0afde828$exports);\n$96fcd635098cdec2$export$c3d3086f9027c35a = $08221df7480992de$export$a541876d5d7daf90($3a32068f0afde828$exports);\n$96fcd635098cdec2$export$e608de25c1f33a63 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const limit = req.query?.limit || 6;\n    const page = req.query?.page || 1;\n    const skip = (page - 1) * limit;\n    const reviews = await $3a32068f0afde828$exports.find().skip(skip).limit(limit).populate([\n        {\n            path: \"user\",\n            select: \" email name photo\"\n        }\n    ]);\n    const totalDocuemnts = await $3a32068f0afde828$exports.countDocuments();\n    res.status(200).json({\n        status: \"success\",\n        results: reviews.length,\n        totalPages: Math.ceil(totalDocuemnts / req.query.limit || 6),\n        data: {\n            documents: reviews\n        }\n    });\n});\n$96fcd635098cdec2$export$757c0bd9156f0e39 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const tour = await $0a0cb2471ded67f3$exports.findOne({\n        _id: req.params.tourId || req?.body.tourId\n    });\n    if (!tour) next(new $8126ef366f855a8b$exports(\"Invalid id for tour!\", 404));\n    const review = {\n        user: req.user.id,\n        tour: req.params.tourId || req.body.tourId,\n        rating: req.body.rating,\n        review: req.body.review\n    };\n    const savedReview = await $3a32068f0afde828$exports.create(review);\n    res.status(201).json({\n        status: \"success\",\n        data: {\n            review: savedReview\n        }\n    });\n});\n$96fcd635098cdec2$export$122fa6d5636ec306 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const limit = req.query?.limit || 6;\n    const page = req.query?.page || 1;\n    const skip = (page - 1) * limit;\n    const documents = await $3a32068f0afde828$exports.find({\n        user: req.user.id\n    }).limit(limit).skip(skip);\n    const totalDocuments = await $3a32068f0afde828$exports.countDocuments({\n        user: req.user.id\n    });\n    res.status(200).json({\n        status: \"success\",\n        results: totalDocuments,\n        totalPages: Math.ceil(totalDocuments / limit),\n        data: {\n            documents: documents\n        }\n    });\n});\n$96fcd635098cdec2$export$189a68d831f3e4ec = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const review = await $3a32068f0afde828$exports.findById(req.params.id);\n    if (!review) return next(new $8126ef366f855a8b$exports(\"Review doesnt exists!\"), 404);\n    if (req.user.role === \"admin\" || review.user === req.user.id) await $3a32068f0afde828$exports.deleteOne({\n        _id: review._id\n    });\n    else return next(new $8126ef366f855a8b$exports(\"You are not allowed to delete this review!\", 400));\n    res.status(204).json({\n        status: \"success\"\n    });\n});\n\n\nvar $0a75861df4d08a91$require$addReview = $96fcd635098cdec2$export$757c0bd9156f0e39;\nvar $0a75861df4d08a91$require$updateReview = $96fcd635098cdec2$export$7019c694ef9e681d;\nvar $0a75861df4d08a91$require$findAllReviews = $96fcd635098cdec2$export$e608de25c1f33a63;\nvar $0a75861df4d08a91$require$deleteReview = $96fcd635098cdec2$export$189a68d831f3e4ec;\nvar $0a75861df4d08a91$require$getReview = $96fcd635098cdec2$export$c3d3086f9027c35a;\nvar $0a75861df4d08a91$require$findLoggedUserReviews = $96fcd635098cdec2$export$122fa6d5636ec306;\n\nvar $0a75861df4d08a91$require$protect = $1e320d355e538560$export$eda7ca9e36571553;\nvar $0a75861df4d08a91$require$restrictTo = $1e320d355e538560$export$e1bac762c84d3b0c;\nconst $0a75861df4d08a91$var$reviewRouter = $drGtS$express.Router({\n    mergeParams: true\n});\n$0a75861df4d08a91$var$reviewRouter.route(\"/\").get($0a75861df4d08a91$require$protect, $0a75861df4d08a91$require$restrictTo(\"admin\"), $0a75861df4d08a91$require$findAllReviews).post($0a75861df4d08a91$require$protect, $0a75861df4d08a91$require$addReview);\n$0a75861df4d08a91$var$reviewRouter.get(\"/me\", $0a75861df4d08a91$require$protect, $0a75861df4d08a91$require$findLoggedUserReviews);\n$0a75861df4d08a91$var$reviewRouter.route(\"/:id\").delete($0a75861df4d08a91$require$protect, $0a75861df4d08a91$require$deleteReview).patch($0a75861df4d08a91$require$protect, $0a75861df4d08a91$require$updateReview).get($0a75861df4d08a91$require$getReview);\n$0a75861df4d08a91$exports = $0a75861df4d08a91$var$reviewRouter;\n\n\nconst $6f3a8b2bb9a5a886$var$tourRouter = $drGtS$express.Router();\n$6f3a8b2bb9a5a886$var$tourRouter.use(\"/:tourId/reviews\", $0a75861df4d08a91$exports);\n$6f3a8b2bb9a5a886$var$tourRouter.get(\"/slug/:slug/\", $6f3a8b2bb9a5a886$require$getTourBySlag);\n$6f3a8b2bb9a5a886$var$tourRouter.route(\"/top-5-cheap\").get($6f3a8b2bb9a5a886$require$getTop5Cheap, $6f3a8b2bb9a5a886$require$getAllTours);\n$6f3a8b2bb9a5a886$var$tourRouter.route(\"/tour-stats\").get($6f3a8b2bb9a5a886$require$getTourStats);\n$6f3a8b2bb9a5a886$var$tourRouter.route(\"/monthly-plan/:year\").get($6f3a8b2bb9a5a886$require$protect, $6f3a8b2bb9a5a886$require$restrictTo(\"admin\", \"lead-guide\", \"guide\"), $6f3a8b2bb9a5a886$require$getMonthlyPlan);\n$6f3a8b2bb9a5a886$var$tourRouter.route(\"/\").get($6f3a8b2bb9a5a886$require$getAllTours).post($6f3a8b2bb9a5a886$require$protect, $6f3a8b2bb9a5a886$require$restrictTo(\"admin\", \"lead-guide\"), $6f3a8b2bb9a5a886$require$createOrUpdateTour).patch($6f3a8b2bb9a5a886$require$protect, $6f3a8b2bb9a5a886$require$restrictTo(\"admin\", \"lead-guide\"), $6f3a8b2bb9a5a886$require$uploadTourImages, $6f3a8b2bb9a5a886$require$resizeTourImages, $6f3a8b2bb9a5a886$require$createOrUpdateTour);\n$6f3a8b2bb9a5a886$var$tourRouter.route(\"/:id\").get($6f3a8b2bb9a5a886$require$getTour).delete($6f3a8b2bb9a5a886$require$protect, $6f3a8b2bb9a5a886$require$restrictTo(\"admin\", \"lead-guide\", \"user\"), $6f3a8b2bb9a5a886$require$deleteTourById);\n$6f3a8b2bb9a5a886$exports = $6f3a8b2bb9a5a886$var$tourRouter;\n\n\nvar $3b09ff5b97016e05$exports = {};\n\n\n\nvar $3b09ff5b97016e05$require$signUp = $1e320d355e538560$export$cf64224bcd829024;\nvar $3b09ff5b97016e05$require$login = $1e320d355e538560$export$596d806903d1f59e;\nvar $3b09ff5b97016e05$require$forgotPassword = $1e320d355e538560$export$66791fb2cfeec3e;\nvar $3b09ff5b97016e05$require$resetPassword = $1e320d355e538560$export$dc726c8e334dd814;\nvar $3b09ff5b97016e05$require$updatePassword = $1e320d355e538560$export$e2853351e15b7895;\nvar $3b09ff5b97016e05$require$protect = $1e320d355e538560$export$eda7ca9e36571553;\nvar $3b09ff5b97016e05$require$restrictTo = $1e320d355e538560$export$e1bac762c84d3b0c;\nvar $3b09ff5b97016e05$require$logoutUser = $1e320d355e538560$export$e8df664d4863167e;\nvar $ee27b59a692bfd7f$export$6dfd280b9fe74301;\nvar $ee27b59a692bfd7f$export$9308575f5c1b4b50;\nvar $ee27b59a692bfd7f$export$69093b9c569a5b5b;\nvar $ee27b59a692bfd7f$export$e3ac7a5d19605772;\nvar $ee27b59a692bfd7f$export$7d0f10f273c0438a;\nvar $ee27b59a692bfd7f$export$7cbf767827cd68ba;\nvar $ee27b59a692bfd7f$export$6bd42d7e8fd0055d;\nvar $ee27b59a692bfd7f$export$dd7946daa6163e94;\nvar $ee27b59a692bfd7f$export$8788023029506852;\nvar $ee27b59a692bfd7f$export$8ddaddf355aae59c;\n\n\n\n\n\n\n// const multerStorage = multer.diskStorage({\n//   destination: (req, file, cb) => {\n//     cb(null, 'public/img/users');\n//   },\n//   filename: (req, file, cb) => {\n//     const ext = file.mimetype.split('/')[1];\n//     cb(null, `user-${req.user.id}-${Date.now()}.${ext}`);\n//   },\n// });\nconst $ee27b59a692bfd7f$var$multerStorage = $drGtS$multer.memoryStorage();\nconst $ee27b59a692bfd7f$var$multerFilter = (req, file, cb)=>{\n    if (file.mimetype.startsWith(\"image\")) cb(null, true);\n    else cb(new $8126ef366f855a8b$exports(`Not an image! Please upload only images!`, 400), false);\n};\nconst $ee27b59a692bfd7f$var$upload = $drGtS$multer({\n    storage: $ee27b59a692bfd7f$var$multerStorage,\n    fileFilter: $ee27b59a692bfd7f$var$multerFilter\n});\n$ee27b59a692bfd7f$export$6dfd280b9fe74301 = $ee27b59a692bfd7f$var$upload.single(\"photo\");\n$ee27b59a692bfd7f$export$9308575f5c1b4b50 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    if (!req.file) return next();\n    req.file.filename = `${req.user.id}-${Date.now()}.jpeg`;\n    await $drGtS$sharp(req.file.buffer).resize(500, 500).toFormat(\"jpeg\").jpeg({\n        quality: 90\n    }).toFile(`public/img/users/${req.file.filename}`);\n    next();\n});\nconst $ee27b59a692bfd7f$var$filterObject = (object, ...allowedFields)=>{\n    const newObject = {};\n    Object.keys(object).forEach((el)=>{\n        if (allowedFields.includes(el)) newObject[el] = object[el];\n    });\n    return newObject;\n};\n$ee27b59a692bfd7f$export$69093b9c569a5b5b = $08221df7480992de$export$18200ea6c8035394($ac6ef53db338fdf8$exports);\n$ee27b59a692bfd7f$export$e3ac7a5d19605772 = $08221df7480992de$export$3220ead45e537228($ac6ef53db338fdf8$exports);\n$ee27b59a692bfd7f$export$7d0f10f273c0438a = $08221df7480992de$export$36a479340da3c347($ac6ef53db338fdf8$exports);\n$ee27b59a692bfd7f$export$7cbf767827cd68ba = $08221df7480992de$export$a541876d5d7daf90($ac6ef53db338fdf8$exports);\n$ee27b59a692bfd7f$export$6bd42d7e8fd0055d = (req, res, next)=>{\n    req.query.role = \"guide\";\n    next();\n};\n$ee27b59a692bfd7f$export$dd7946daa6163e94 = (req, res, next)=>{\n    req.params.id = req.user.id;\n    next();\n};\n$ee27b59a692bfd7f$export$8788023029506852 = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    await $ac6ef53db338fdf8$exports.findByIdAndDelete(req.user.id);\n    res.status(204).json({\n        stats: \"success\",\n        data: null\n    });\n});\n$ee27b59a692bfd7f$export$8ddaddf355aae59c = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    if (req.body.password) return next(new $8126ef366f855a8b$exports(`User password not allowed to change in this request!`, 400));\n    const filteredBody = $ee27b59a692bfd7f$var$filterObject(req.body, \"name\", \"email\");\n    if (req.file) filteredBody.photo = req.file.filename;\n    const updatedUser = await $ac6ef53db338fdf8$exports.findByIdAndUpdate(req.user._id, filteredBody, {\n        new: true,\n        runValidators: true\n    });\n    res.status(200).json({\n        stats: \"success\",\n        data: {\n            user: updatedUser\n        }\n    });\n});\n\n\nvar $3b09ff5b97016e05$require$getUser = $ee27b59a692bfd7f$export$7cbf767827cd68ba;\nvar $3b09ff5b97016e05$require$updateUser = $ee27b59a692bfd7f$export$e3ac7a5d19605772;\nvar $3b09ff5b97016e05$require$deleteMe = $ee27b59a692bfd7f$export$8788023029506852;\nvar $3b09ff5b97016e05$require$getAllUsers = $ee27b59a692bfd7f$export$69093b9c569a5b5b;\nvar $3b09ff5b97016e05$require$updateMe = $ee27b59a692bfd7f$export$8ddaddf355aae59c;\nvar $3b09ff5b97016e05$require$deleteUser = $ee27b59a692bfd7f$export$7d0f10f273c0438a;\nvar $3b09ff5b97016e05$require$getMe = $ee27b59a692bfd7f$export$dd7946daa6163e94;\nvar $3b09ff5b97016e05$require$uploadUserPhoto = $ee27b59a692bfd7f$export$6dfd280b9fe74301;\nvar $3b09ff5b97016e05$require$resizeUserPhoto = $ee27b59a692bfd7f$export$9308575f5c1b4b50;\nvar $3b09ff5b97016e05$require$filterByRoleGuide = $ee27b59a692bfd7f$export$6bd42d7e8fd0055d;\nconst $3b09ff5b97016e05$var$userRouter = $drGtS$express.Router();\n$3b09ff5b97016e05$var$userRouter.post(\"/signup\", $3b09ff5b97016e05$require$signUp);\n$3b09ff5b97016e05$var$userRouter.post(\"/login\", $3b09ff5b97016e05$require$login);\n$3b09ff5b97016e05$var$userRouter.post(\"/passwordForgot\", $3b09ff5b97016e05$require$forgotPassword);\n$3b09ff5b97016e05$var$userRouter.patch(\"/resetPassword/:token\", $3b09ff5b97016e05$require$resetPassword);\n$3b09ff5b97016e05$var$userRouter.patch(\"/updatePassword\", $3b09ff5b97016e05$require$protect, $3b09ff5b97016e05$require$updatePassword);\n$3b09ff5b97016e05$var$userRouter.use($3b09ff5b97016e05$require$protect);\n$3b09ff5b97016e05$var$userRouter.get(\"/guides\", $3b09ff5b97016e05$require$filterByRoleGuide, $3b09ff5b97016e05$require$getAllUsers);\n$3b09ff5b97016e05$var$userRouter.get(\"/me\", $3b09ff5b97016e05$require$getMe, $3b09ff5b97016e05$require$getUser);\n$3b09ff5b97016e05$var$userRouter.post(\"/logout\", $3b09ff5b97016e05$require$logoutUser);\n$3b09ff5b97016e05$var$userRouter.patch(\"/updateMe\", $3b09ff5b97016e05$require$uploadUserPhoto, $3b09ff5b97016e05$require$resizeUserPhoto, $3b09ff5b97016e05$require$updateMe);\n$3b09ff5b97016e05$var$userRouter.delete(\"/deleteMe\", $3b09ff5b97016e05$require$deleteMe);\n$3b09ff5b97016e05$var$userRouter.use($3b09ff5b97016e05$require$restrictTo(\"lead-guide\", \"admin\"));\n$3b09ff5b97016e05$var$userRouter.route(\"/\").get($3b09ff5b97016e05$require$getAllUsers);\n$3b09ff5b97016e05$var$userRouter.route(\"/:id\").get($3b09ff5b97016e05$require$getUser).patch($3b09ff5b97016e05$require$updateUser).delete($3b09ff5b97016e05$require$deleteUser);\n$3b09ff5b97016e05$exports = $3b09ff5b97016e05$var$userRouter;\n\n\n\nvar $27725f377c41720f$exports = {};\n\nvar $0a72fb45c37702e8$export$f1c4cda49673848c;\nvar $0a72fb45c37702e8$export$397675b10323feca;\nvar $0a72fb45c37702e8$export$e7496fa7d46188bf;\nvar $0a72fb45c37702e8$export$cfb65022ba42b2b3;\nvar $0a72fb45c37702e8$export$b7b1ce5fabd1b486;\n\nconst $0a72fb45c37702e8$var$stripe = $drGtS$stripe(\"sk_test_51PHRqMBN6CjUTslEk0VW2yNGfEnxS4QB1sSG6RbYVd6oPJl1rhoA4mMeUVB5v68xaSyKp5kW50y3i7O45sVPsdNe00SKtQ7zC3\");\n\n\n\nvar $d755f882496b8e67$exports = {};\n\nconst $d755f882496b8e67$var$bookingSchema = $drGtS$mongoose.Schema({\n    tour: {\n        type: $drGtS$mongoose.Schema.ObjectId,\n        ref: \"Tour\",\n        required: [\n            true,\n            \"Booking must belong to tour!\"\n        ]\n    },\n    user: {\n        type: $drGtS$mongoose.Schema.ObjectId,\n        ref: \"User\",\n        required: [\n            true,\n            \"Booking must belong to user!\"\n        ]\n    },\n    price: {\n        type: Number,\n        required: [\n            true,\n            \"Booking must have a price!\"\n        ]\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now()\n    },\n    paid: {\n        type: Boolean,\n        required: [\n            true,\n            \"Bookign must have information is it paid!\"\n        ],\n        default: true\n    }\n}, {\n    toJson: {\n        virtuals: true\n    },\n    toObject: {\n        virtuals: true\n    }\n});\n$d755f882496b8e67$var$bookingSchema.pre(/^find/, function(next) {\n    this.populate([\n        {\n            path: \"tour\"\n        },\n        {\n            path: \"user\",\n            select: \"photo _id name email\"\n        }\n    ]);\n    next();\n});\nconst $d755f882496b8e67$var$Booking = $drGtS$mongoose.model(\"Booking\", $d755f882496b8e67$var$bookingSchema);\n$d755f882496b8e67$exports = $d755f882496b8e67$var$Booking;\n\n\n\n$0a72fb45c37702e8$export$f1c4cda49673848c = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const tour = await $0a0cb2471ded67f3$exports.findById(req.params.tourId);\n    if (!tour) return next(new $8126ef366f855a8b$exports(`Tour with id ${req.params.tourId} doesnt exists!`, 400));\n    const session = await $0a72fb45c37702e8$var$stripe.checkout.sessions.create({\n        payment_method_types: [\n            \"card\"\n        ],\n        mode: \"payment\",\n        // success_url: `http://localhost:5173/account/bookings?tour=${req.params.tourId}&user=${req.user.id}&price=${tour.price}`,\n        success_url: `http://localhost:5173/account/bookings?payment=success`,\n        cancel_url: `http://localhost:5173/account/bookings?payment=error`,\n        customer_email: req.user.email,\n        client_reference_id: req.params.tourId,\n        line_items: [\n            {\n                price_data: {\n                    currency: \"usd\",\n                    product_data: {\n                        name: `${tour.name} Tour`,\n                        description: tour.summary,\n                        images: [\n                            `https://www.natours.dev/img/tours/tour-2-cover.jpg`\n                        ]\n                    },\n                    unit_amount: tour.price * 100\n                },\n                quantity: 1\n            }\n        ]\n    });\n    res.status(200).json({\n        status: \"success\",\n        session: session\n    });\n});\n$0a72fb45c37702e8$export$397675b10323feca = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const { user: user, tour: tour, price: price } = req.body;\n    //this is temporary\n    if (!user || !tour || !price) return next(new $8126ef366f855a8b$exports(\"Missing body parts!\", 400));\n    const booking = {\n        user: user,\n        tour: tour,\n        price: price\n    };\n    const savedBooking = await $d755f882496b8e67$exports.create(booking);\n    if (!savedBooking) return next(new $8126ef366f855a8b$exports(\"Fail to create booking\", 400));\n    res.status(201).json({\n        status: \"success\",\n        data: {\n            booking: savedBooking\n        }\n    });\n});\n$0a72fb45c37702e8$export$e7496fa7d46188bf = $3b428b33c352f09e$exports(async (req, res, next)=>{\n    const bookings = await $d755f882496b8e67$exports.find({\n        user: req.user.id\n    }).limit(req.query.limit).skip(req.query.page * req.query.limit);\n    const totalDocuments = await $d755f882496b8e67$exports.countDocuments({\n        user: req.user.id\n    });\n    res.status(200).json({\n        status: \"success\",\n        results: bookings,\n        totalPages: Math.ceil(totalDocuments / bookings?.length),\n        data: {\n            bookings: bookings\n        }\n    });\n});\n$0a72fb45c37702e8$export$cfb65022ba42b2b3 = $08221df7480992de$export$18200ea6c8035394($d755f882496b8e67$exports);\n$0a72fb45c37702e8$export$b7b1ce5fabd1b486 = $08221df7480992de$export$36a479340da3c347($d755f882496b8e67$exports);\n\n\nvar $27725f377c41720f$require$getCheckoutSession = $0a72fb45c37702e8$export$f1c4cda49673848c;\nvar $27725f377c41720f$require$createBookingCheckout = $0a72fb45c37702e8$export$397675b10323feca;\nvar $27725f377c41720f$require$getMeBookings = $0a72fb45c37702e8$export$e7496fa7d46188bf;\nvar $27725f377c41720f$require$getAllBookingAdmin = $0a72fb45c37702e8$export$cfb65022ba42b2b3;\nvar $27725f377c41720f$require$deleteBooking = $0a72fb45c37702e8$export$b7b1ce5fabd1b486;\n\nvar $27725f377c41720f$require$protect = $1e320d355e538560$export$eda7ca9e36571553;\nvar $27725f377c41720f$require$restrictTo = $1e320d355e538560$export$e1bac762c84d3b0c;\nconst $27725f377c41720f$var$router = $drGtS$express.Router();\n$27725f377c41720f$var$router.get(\"/checkout-session/:tourId\", $27725f377c41720f$require$protect, $27725f377c41720f$require$getCheckoutSession);\n$27725f377c41720f$var$router.post(\"/create-checkout-booking\", $27725f377c41720f$require$protect, $27725f377c41720f$require$createBookingCheckout);\n$27725f377c41720f$var$router.get(\"/all\", $27725f377c41720f$require$protect, $27725f377c41720f$require$restrictTo(\"admin\", \"lead-guide\"), $27725f377c41720f$require$getAllBookingAdmin);\n$27725f377c41720f$var$router.delete(\"/:id\", $27725f377c41720f$require$protect, $27725f377c41720f$require$restrictTo(\"admin\"), $27725f377c41720f$require$deleteBooking);\n$27725f377c41720f$var$router.get(\"/\", $27725f377c41720f$require$protect, $27725f377c41720f$require$getMeBookings);\n$27725f377c41720f$exports = $27725f377c41720f$var$router;\n\n\nconst $d625cecd33a9d787$var$app = $drGtS$express();\n// start express\n$d625cecd33a9d787$var$app.use($drGtS$cors({\n    origin: \"http://localhost:5173\",\n    credentials: true\n}));\n$d625cecd33a9d787$var$app.options(\"*\", $drGtS$cors());\n$drGtS$dotenv.config({\n    path: `./config.env`\n});\nconst $d625cecd33a9d787$var$limiter = $drGtS$expressratelimit({\n    max: 100,\n    windowMs: 600000,\n    message: \"Too many requests from this IP, please try again in 10 minutes!\"\n});\n$d625cecd33a9d787$var$app.use(\"/api\", $d625cecd33a9d787$var$limiter);\n$d625cecd33a9d787$var$app.use($drGtS$express.json({\n    limit: \"10kb\"\n}));\n$d625cecd33a9d787$var$app.use(\"/images\", $drGtS$express.static($drGtS$path.join($d625cecd33a9d787$var$$parcel$__dirname, \"public\", \"img\", \"tours\")));\n$d625cecd33a9d787$var$app.use(\"/images/user\", $drGtS$express.static($drGtS$path.join($d625cecd33a9d787$var$$parcel$__dirname, \"public\", \"img\", \"users\")));\n$d625cecd33a9d787$var$app.use($drGtS$cookieparser());\n$d625cecd33a9d787$var$app.use($drGtS$helmet());\n$d625cecd33a9d787$var$app.use($drGtS$expressmongosanitize());\n$d625cecd33a9d787$var$app.use($drGtS$xssclean());\n$d625cecd33a9d787$var$app.use($drGtS$hpp({\n    whitelist: [\n        `duration`,\n        \"ratingsQuantity\",\n        \"ratingsAverage\",\n        \"maxGroupSize\",\n        \"difficulty\",\n        \"price\"\n    ]\n}));\n$d625cecd33a9d787$var$app.use($drGtS$compression());\nif (process.env.ENV_NODE == \"development\") $d625cecd33a9d787$var$app.use($drGtS$morgan(\"dev\"));\n$d625cecd33a9d787$var$app.use(\"/api/v1/users/\", $3b09ff5b97016e05$exports);\n$d625cecd33a9d787$var$app.use(\"/api/v1/tours/\", $6f3a8b2bb9a5a886$exports);\n$d625cecd33a9d787$var$app.use(\"/api/v1/reviews/\", $0a75861df4d08a91$exports);\n$d625cecd33a9d787$var$app.use(\"/api/v1/bookings/\", $27725f377c41720f$exports);\n// handling errors\n$d625cecd33a9d787$var$app.all(\"*\", (req, res, next)=>{\n    next(new $8126ef366f855a8b$exports(`There is no path for ${req.originalUrl}`, 404));\n});\n$d625cecd33a9d787$var$app.use($0298fd9c5984ce66$exports);\nmodule.exports = $d625cecd33a9d787$var$app;\n\n\n//# sourceMappingURL=app.js.map\n","const express = require('express');\r\nconst morgan = require('morgan');\r\nconst dotenv = require(`dotenv`);\r\nconst rateLimit = require(`express-rate-limit`);\r\nconst helmet = require(`helmet`);\r\nconst mongoSanitize = require(`express-mongo-sanitize`);\r\nconst xss = require('xss-clean');\r\nconst hpp = require(`hpp`);\r\nconst cors = require('cors');\r\nconst path = require('path');\r\nconst cookieParser = require('cookie-parser');\r\nconst compression = require('compression');\r\n\r\nconst AppError = require('./utils/appError');\r\nconst ErrorController = require('./controllers/errorController');\r\nconst tourRouter = require('./routes/tourRouter');\r\nconst userRouter = require('./routes/userRouter');\r\nconst reviewRouter = require('./routes/reviewRouter');\r\nconst bookingRouter = require('./routes/bookingRouter');\r\n\r\nconst app = express();\r\n\r\n// start express\r\napp.use(\r\n  cors({\r\n    origin: 'http://localhost:5173',\r\n    credentials: true,\r\n  })\r\n);\r\napp.options('*', cors());\r\ndotenv.config({ path: `./config.env` });\r\n\r\nconst limiter = rateLimit({\r\n  max: 100,\r\n  windowMs: 10 * 60 * 1000,\r\n  message: 'Too many requests from this IP, please try again in 10 minutes!',\r\n});\r\napp.use('/api', limiter);\r\napp.use(\r\n  express.json({\r\n    limit: '10kb',\r\n  })\r\n);\r\napp.use(\r\n  '/images',\r\n  express.static(path.join(__dirname, 'public', 'img', 'tours'))\r\n);\r\napp.use(\r\n  '/images/user',\r\n  express.static(path.join(__dirname, 'public', 'img', 'users'))\r\n);\r\napp.use(cookieParser());\r\napp.use(helmet());\r\napp.use(mongoSanitize());\r\napp.use(xss());\r\napp.use(\r\n  hpp({\r\n    whitelist: [\r\n      `duration`,\r\n      'ratingsQuantity',\r\n      'ratingsAverage',\r\n      'maxGroupSize',\r\n      'difficulty',\r\n      'price',\r\n    ],\r\n  })\r\n);\r\n\r\napp.use(compression());\r\n\r\nif (process.env.ENV_NODE == 'development') {\r\n  app.use(morgan('dev'));\r\n}\r\n\r\napp.use('/api/v1/users/', userRouter);\r\napp.use('/api/v1/tours/', tourRouter);\r\napp.use('/api/v1/reviews/', reviewRouter);\r\napp.use('/api/v1/bookings/', bookingRouter);\r\n\r\n// handling errors\r\napp.all('*', (req, res, next) => {\r\n  next(new AppError(`There is no path for ${req.originalUrl}`, 404));\r\n});\r\n\r\napp.use(ErrorController);\r\n\r\nmodule.exports = app;\r\n","class AppError extends Error {\r\n  constructor(message, statusCode) {\r\n    super(message);\r\n\r\n    this.statusCode = statusCode;\r\n    this.status = `${statusCode}`.startsWith('4') ? 'Fail' : 'Success';\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\nmodule.exports = AppError;\r\n","const sendErrorDevlopment = (err, res) => {\r\n  res.status(err.statusCode).json({\r\n    status: err.status,\r\n    error: err,\r\n    message: err.message,\r\n    stack: err.stack,\r\n  });\r\n};\r\n\r\nconst sendErrorProduction = (err, res) => {\r\n  if (err.isOperational) {\r\n    res.status(err.statusCode).json({\r\n      status: err.status,\r\n      message: err.message,\r\n    });\r\n  } else {\r\n    res.status(500).json({\r\n      status: 'Error',\r\n      mesage: 'Something went very wrong!',\r\n    });\r\n  }\r\n};\r\n\r\nconst handleCastErrorDB = (err, res) => {\r\n  res.status(400).json({\r\n    status: 'Error',\r\n    message: `Input id (${err.value}) is incorrect!`,\r\n  });\r\n};\r\n\r\nconst handleUniquenessErroDB = (err, res) => {\r\n  const fieldValue = Object.keys(err.errorResponse.keyPattern)[0];\r\n  res.status(400).json({\r\n    status: 'Error',\r\n    message: `The input for field: ${fieldValue} (${err.errorResponse.keyValue[fieldValue]}) shoud be unique, please chose another!`,\r\n  });\r\n};\r\n\r\nconst handleValidationErrorDB = (err, res) => {\r\n  const errorFields = Object.keys(err.errors);\r\n  const errorMessages = {};\r\n\r\n  errorFields.forEach(\r\n    (field) => (errorMessages[field] = err.errors[field]?.message)\r\n  );\r\n\r\n  res.status(400).json({\r\n    status: 'Error',\r\n    message: errorMessages,\r\n  });\r\n};\r\n\r\nconst handleJwtSignatureError = (err, res) => {\r\n  res.status(401).json({\r\n    status: 'Error',\r\n    message: 'Invalid JWT Signature!',\r\n  });\r\n};\r\n\r\nconst handleJwtExpirationError = (err, res) => {\r\n  res.status(401).json({\r\n    status: 'Error',\r\n    message: 'Token expired',\r\n  });\r\n};\r\n\r\nmodule.exports = (err, req, res, next) => {\r\n  err.statusCode = err.statusCode || 500;\r\n  err.status = err.status || 'error';\r\n\r\n  if (err?.name === 'CastError') {\r\n    handleCastErrorDB(err, res);\r\n  } else if (err.name === 'TokenExpiredError') {\r\n    handleJwtExpirationError(err, res);\r\n  } else if (err.name === 'JsonWebTokenError') {\r\n    handleJwtSignatureError(err, res);\r\n  } else if (err?.errorResponse?.code === 11000) {\r\n    handleUniquenessErroDB(err, res);\r\n  } else if (err?.name === 'ValidationError') {\r\n    handleValidationErrorDB(err, res);\r\n  } else {\r\n    process.env.NODE_ENV === 'production'\r\n      ? sendErrorDevlopment(err, res)\r\n      : sendErrorProduction(err, res);\r\n  }\r\n};\r\n","const express = require(`express`);\r\nconst {\r\n  getAllTours,\r\n  getTour,\r\n  createOrUpdateTour,\r\n  getTop5Cheap,\r\n  deleteTourById,\r\n  getTourStats,\r\n  getMonthlyPlan,\r\n  getTourBySlag,\r\n  uploadTourImages,\r\n  resizeTourImages,\r\n} = require('../controllers/tourController');\r\nconst { protect, restrictTo } = require('./../controllers/authController');\r\nconst reviewRouter = require('./reviewRouter');\r\n\r\nconst tourRouter = express.Router();\r\n\r\ntourRouter.use('/:tourId/reviews', reviewRouter);\r\ntourRouter.get('/slug/:slug/', getTourBySlag);\r\ntourRouter.route('/top-5-cheap').get(getTop5Cheap, getAllTours);\r\ntourRouter.route('/tour-stats').get(getTourStats);\r\ntourRouter\r\n  .route('/monthly-plan/:year')\r\n  .get(protect, restrictTo('admin', 'lead-guide', 'guide'), getMonthlyPlan);\r\n\r\ntourRouter\r\n  .route('/')\r\n  .get(getAllTours)\r\n  .post(protect, restrictTo('admin', 'lead-guide'), createOrUpdateTour)\r\n  .patch(\r\n    protect,\r\n    restrictTo('admin', 'lead-guide'),\r\n    uploadTourImages,\r\n    resizeTourImages,\r\n    createOrUpdateTour\r\n  );\r\n\r\ntourRouter\r\n  .route('/:id')\r\n  .get(getTour)\r\n\r\n  .delete(protect, restrictTo('admin', 'lead-guide', 'user'), deleteTourById);\r\n\r\nmodule.exports = tourRouter;\r\n","const Tour = require('../models/tourModel');\r\nconst catchAsync = require('./../utils/catchAsync');\r\nconst factory = require('./handlerFactory');\r\nconst AppError = require('./../utils/appError');\r\nconst sharp = require('sharp');\r\nconst multer = require('multer');\r\nconst deleteFile = require(`../utils/deleteFile`);\r\n\r\nconst multerStorage = multer.memoryStorage();\r\nconst multerFilter = (req, file, cb) => {\r\n  if (file.mimetype.startsWith('image')) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(new AppError('Only images are supported', 400), false);\r\n  }\r\n};\r\n\r\nconst upload = multer({\r\n  storage: multerStorage,\r\n  fileFilter: multerFilter,\r\n});\r\n\r\nexports.uploadTourImages = upload.fields([\r\n  { name: 'imageCover', maxCount: 1 },\r\n  { name: 'images', maxCount: 3 },\r\n]);\r\n\r\nexports.resizeTourImages = catchAsync(async (req, res, next) => {\r\n  if (!req.files.imageCover && !req.files.images) return next();\r\n  if (req.files.imageCover) {\r\n    req.body.imageCover = `tour-${req.params.tourId}-${Date.now()}-cover.jpeg`;\r\n    await sharp(req.files.imageCover[0].buffer)\r\n      .resize(2000, 1333)\r\n      .toFormat('jpeg')\r\n      .jpeg({ quality: 90 })\r\n      .toFile(`public/img/tours/${req.body.imageCover}`);\r\n  }\r\n\r\n  if (req.files.images) {\r\n    req.body.images = [];\r\n    await Promise.all(\r\n      req.files.images.map(async (file, index) => {\r\n        const fileName = `tour-${req.params.tourId}-${Date.now()}-${index + 1}.jpeg`;\r\n        await sharp(file.buffer)\r\n          .resize(2000, 1333)\r\n          .toFormat('jpeg')\r\n          .jpeg({ quality: 90 })\r\n          .toFile(`public/img/tours/${fileName}`);\r\n        req.body.images.push(fileName);\r\n      })\r\n    );\r\n  }\r\n  next();\r\n});\r\n\r\nexports.deleteTourById = factory.deleteOne(Tour);\r\nexports.getTour = factory.findOne(Tour, { path: 'reviews', select: '-tour' });\r\nexports.getAllTours = factory.findAll(Tour);\r\n\r\nexports.createOrUpdateTour = catchAsync(async (req, res, next) => {\r\n  const tour = JSON.parse(req.body.tour);\r\n\r\n  let oldImages;\r\n  let oldImageCover;\r\n\r\n  if (req.body.images) {\r\n    if (tour?.images) {\r\n      oldImages = { ...tour.images };\r\n    }\r\n    tour.images = req.body.images;\r\n  }\r\n  if (req.body.imageCover) {\r\n    if (tour?.imageCover) {\r\n      oldImageCover = tour.imageCover;\r\n    }\r\n    tour.imageCover = req.body.imageCover;\r\n  }\r\n\r\n  let savedOrUpdatedTour;\r\n\r\n  if (tour._id) {\r\n    savedOrUpdatedTour = await Tour.findByIdAndUpdate(tour._id, tour, {\r\n      new: true,\r\n      runValidators: true,\r\n    });\r\n  } else {\r\n    savedOrUpdatedTour = await Tour.create(tour);\r\n  }\r\n\r\n  if (!savedOrUpdatedTour) {\r\n    req.body?.images.forEach((image) => deleteFile(image));\r\n    req.body?.imageCover && deleteFile(req.body.imageCover);\r\n    return next(new AppError(`There is no tour with id ${req.params.id}`, 404));\r\n  } else {\r\n    oldImages?.forEach?.((image) => deleteFile(image));\r\n    oldImageCover && deleteFile(oldImageCover);\r\n  }\r\n\r\n  res.status(tour._id ? 200 : 201).json({\r\n    status: 'success',\r\n    data: {\r\n      document: savedOrUpdatedTour,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getTop5Cheap = async (req, res, next) => {\r\n  req.query = {\r\n    limit: '5',\r\n    sort: 'price,-raitingsAverage',\r\n  };\r\n  req.query.fields = 'price,name,difficulty,ratingsAverage';\r\n  next();\r\n};\r\n\r\nexports.getTourStats = catchAsync(async (req, res, next) => {\r\n  const stats = await Tour.aggregate([\r\n    {\r\n      $match: { ratingsAverage: { $gte: 4.4 } },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: { $toUpper: `$difficulty` },\r\n        num: { $sum: 1 },\r\n        numRatings: { $sum: `$ratingsQuantity` },\r\n        avgPrice: { $avg: `$price` },\r\n        minPrice: { $min: `$price` },\r\n        maxPrice: { $max: `$price` },\r\n      },\r\n    },\r\n  ]);\r\n  res.status(200).json({\r\n    status: `success`,\r\n    data: {\r\n      stats,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getMonthlyPlan = catchAsync(async (req, res, next) => {\r\n  const year = req.params.year * 1;\r\n\r\n  const plan = await Tour.aggregate([\r\n    {\r\n      $unwind: `$startDates`,\r\n    },\r\n    {\r\n      $match: {\r\n        startDates: {\r\n          $gte: new Date(`${year}-1-1`),\r\n          $lte: new Date(`${year}-12-31`),\r\n        },\r\n      },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: { $month: '$startDates' },\r\n        sum: { $sum: 1 },\r\n        tours: { $push: `$name` },\r\n      },\r\n    },\r\n    {\r\n      $addFields: { month: `$_id` },\r\n    },\r\n    {\r\n      $project: {\r\n        _id: 0,\r\n      },\r\n    },\r\n    {\r\n      $sort: {\r\n        sum: -1,\r\n      },\r\n    },\r\n    {\r\n      $limit: 12,\r\n    },\r\n  ]);\r\n\r\n  res.status(200).json({\r\n    status: `success`,\r\n    results: plan.length,\r\n    data: {\r\n      plan,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getTourBySlag = catchAsync(async (req, res, next) => {\r\n  const tour = await Tour.findOne({ slug: req.params.slug }).populate([\r\n    { path: 'reviews', select: '-tour' },\r\n  ]);\r\n\r\n  if (!tour) {\r\n    return next(\r\n      new AppError(`Tour with slug ${req.params.slug} doesnt exists!`, 404)\r\n    );\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: `success`,\r\n    data: {\r\n      tour,\r\n    },\r\n  });\r\n});\r\n","const mongoose = require(`mongoose`);\r\nconst slugify = require(`slugify`);\r\n\r\nconst tourSchema = mongoose.Schema(\r\n  {\r\n    slug: {\r\n      type: String,\r\n    },\r\n    name: {\r\n      required: [true, 'Tour name is required!'],\r\n      minLength: [5, `Minimum length is 20 char!`],\r\n      maxLength: [40, `Maximum length is 40 char!`],\r\n      type: String,\r\n      unique: true,\r\n      trim: true,\r\n    },\r\n    duration: {\r\n      type: Number,\r\n      required: [true, `Duration is required`],\r\n      min: [1, `Duration must be minimum 1 day!`],\r\n    },\r\n    difficulty: {\r\n      type: String,\r\n      required: [true, `Difficulty is required`],\r\n      enum: {\r\n        values: ['easy', 'difficult', 'medium'],\r\n        message: 'Difficult must be either easy, difficult or medium!',\r\n      },\r\n    },\r\n    ratingsAverage: {\r\n      type: Number,\r\n      default: 4.5,\r\n      min: [1, `Rating must be higher than 1.`],\r\n      max: [5, 'Rating must be below 5'],\r\n    },\r\n    ratingsQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: [true, `Price is required`],\r\n      min: [1, `Price must be minimum 1`],\r\n      max: [15000, 'Price must be below 15000'],\r\n    },\r\n    maxGroupSize: {\r\n      type: Number,\r\n      required: [true, `Max group size is required`],\r\n      min: [1, `Min group size is 1`],\r\n      max: [100, 'Max group size is 10'],\r\n      default: 1,\r\n    },\r\n    summary: {\r\n      type: String,\r\n      trim: true,\r\n      required: [true, `Summary is required`],\r\n      minLength: [1, `Summary  minimum length is 1`],\r\n      maxLength: [255, 'Summary maximum length is 255'],\r\n    },\r\n    description: {\r\n      type: String,\r\n      trim: true,\r\n      minLength: [10, `description minimum length is 10`],\r\n      maxLength: [1700, `description maximum length is 700`],\r\n    },\r\n    imageCover: {\r\n      type: String,\r\n      trim: true,\r\n      required: [true, `Image cover is required`],\r\n    },\r\n    images: {\r\n      required: [true, `images are required`],\r\n      type: [String],\r\n    },\r\n    startDates: {\r\n      required: [true, 'Start dates are required'],\r\n      type: [Date],\r\n    },\r\n    priceDiscount: {\r\n      type: Number,\r\n      validate: {\r\n        validator: function (value) {\r\n          this.price > value;\r\n        },\r\n        message: `Discount price must be lower then ({VALUE})`,\r\n      },\r\n    },\r\n    secretTour: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    startLocation: {\r\n      type: {\r\n        type: String,\r\n        default: `Point`,\r\n        enum: ['Point'],\r\n      },\r\n      coordinates: [Number],\r\n      address: String,\r\n      description: String,\r\n    },\r\n    locations: [\r\n      {\r\n        type: {\r\n          type: String,\r\n          default: 'Point',\r\n          enum: [`Point`],\r\n        },\r\n        cordinates: [Number],\r\n        address: String,\r\n        description: String,\r\n        day: Number,\r\n      },\r\n    ],\r\n    guides: [{ type: mongoose.Schema.ObjectId, ref: 'User' }],\r\n  },\r\n  {\r\n    toJSON: { virtuals: true, getter: true },\r\n    toObject: { virtuals: true, getter: true },\r\n  }\r\n);\r\n\r\ntourSchema.index({ slug: 1 });\r\ntourSchema.index({ price: 1, ratingsAverage: -1 });\r\n\r\ntourSchema.virtual('durationInWeeks').get(function () {\r\n  return this.duration / 7;\r\n});\r\n\r\ntourSchema.virtual('reviews', {\r\n  ref: 'Review',\r\n  foreignField: 'tour',\r\n  localField: '_id',\r\n});\r\n\r\n// DOCUMENT MIDDLEWARE\r\ntourSchema.pre('save', function (next) {\r\n  this.slug = slugify(this.name, { lower: true });\r\n  next();\r\n});\r\n\r\n// QUERY MIDDLEWARE WITH EXPRESSSION\r\ntourSchema.pre(/^find/, function (next) {\r\n  this.start = Date.now();\r\n  next();\r\n});\r\n\r\ntourSchema.pre(/^find/, function (next) {\r\n  this.populate({ path: 'guides' }).select('-_v');\r\n  next();\r\n});\r\n\r\ntourSchema.post(/^find/, function (documents, next) {\r\n  console.log(`Query took ${this.start - Date.now()}`);\r\n  next();\r\n});\r\n\r\n// AGGREGATION MIDDLEWARE\r\ntourSchema.pre('aggregate', function (next) {\r\n  this.pipeline().unshift({\r\n    $match: { secretTour: { $ne: false } },\r\n  });\r\n  next();\r\n});\r\n\r\nconst Tour = mongoose.model('Tour', tourSchema);\r\n\r\nmodule.exports = Tour;\r\n","module.exports = (fn) => {\r\n  return (req, res, next) => {\r\n    fn(req, res, next).catch(next);\r\n  };\r\n};\r\n","const catchAsync = require('./../utils/catchAsync');\r\nconst AppError = require('./../utils/appError');\r\nconst APIFeatures = require('./../utils/APIFeatures');\r\n\r\nexports.deleteOne = (Model) => {\r\n  return catchAsync(async (req, res, next) => {\r\n    const doc = await Model.findByIdAndDelete(req.params.id);\r\n    if (!doc) {\r\n      return next(\r\n        new AppError(`No document found with id ${req.params.id}!`, 404)\r\n      );\r\n    }\r\n\r\n    res.status(204).json({\r\n      status: 'success',\r\n      data: null,\r\n    });\r\n  });\r\n};\r\n\r\nexports.updateOne = (Model) => {\r\n  return catchAsync(async (req, res, next) => {\r\n    const document = await Model.findByIdAndUpdate(req.params.id, req.body, {\r\n      new: true,\r\n      runValidators: true,\r\n    });\r\n\r\n    if (!document) {\r\n      return next(\r\n        new AppError(`Document with id ${req.params.id} doesnt exists!`, 404)\r\n      );\r\n    }\r\n\r\n    res.status(200).json({\r\n      status: 'success',\r\n      data: {\r\n        data: document,\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\nexports.createOne = (Model) => {\r\n  return catchAsync(async (req, res, next) => {\r\n    const document = await Model.create(req.body);\r\n\r\n    res.status(201).json({\r\n      status: 'success',\r\n      data: {\r\n        data: document,\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\nexports.findOne = (Model, populateOptions) => {\r\n  return catchAsync(async (req, res, next) => {\r\n    let query = Model.findById(req.params.id);\r\n\r\n    if (populateOptions) {\r\n      query.populate(populateOptions);\r\n    }\r\n\r\n    const data = await query;\r\n\r\n    if (!data) {\r\n      return next(\r\n        new AppError(`Document with id ${req.params.id} doesnt exist's!`, 404)\r\n      );\r\n    }\r\n\r\n    res.status(200).json({\r\n      status: 'success',\r\n      data: {\r\n        data,\r\n      },\r\n    });\r\n  });\r\n};\r\n\r\nexports.findAll = (Model) => {\r\n  return catchAsync(async (req, res, next) => {\r\n    let filter = {};\r\n\r\n    if (req.params.tourId) {\r\n      filter = { tour: req.params.tourId };\r\n    }\r\n\r\n    const features = new APIFeatures(req.query, Model.find(filter))\r\n      .filter()\r\n      .sort()\r\n      .limitFields()\r\n      .paginate();\r\n\r\n    const documents = await features.query;\r\n    const totalDocuments = await Model.countDocuments(filter);\r\n\r\n    res.status(200).json({\r\n      status: 'success',\r\n      results: totalDocuments,\r\n      totalPages: Math.ceil(totalDocuments / req.query.limit || 6),\r\n      data: {\r\n        documents,\r\n      },\r\n    });\r\n  });\r\n};\r\n","module.exports = class APIFeatures {\r\n  constructor(queryObject, query) {\r\n    this.queryObject = queryObject;\r\n    this.query = query;\r\n  }\r\n\r\n  filter() {\r\n    const fieldToExclude = ['page', 'limit', 'sort', 'fields'];\r\n    const queryObject = { ...this.queryObject };\r\n    fieldToExclude.forEach((field) => delete queryObject[field]);\r\n\r\n    let queryStr = JSON.stringify(queryObject).replace(\r\n      /\\b(gte|gt|lt|lte|eq|ne)\\b/,\r\n      (match) => `$${match}`\r\n    );\r\n\r\n    this.query = this.query.find(JSON.parse(queryStr));\r\n\r\n    return this;\r\n  }\r\n\r\n  sort() {\r\n    if (this.queryObject.sort) {\r\n      const sortBy = this.queryObject.sort.split(',').join(' ');\r\n      this.query = this.query.sort(sortBy);\r\n    } else {\r\n      this.query = this.query.sort('-createdAt');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  limitFields() {\r\n    if (this.queryObject.fields) {\r\n      const fieldToSelect = this.queryObject.fields.split(',').join(' ');\r\n      this.query = this.query.select(fieldToSelect);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  paginate() {\r\n    const page = this.queryObject.page * 1 || 1;\r\n    const limit = this.queryObject.limit * 1 || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    this.query = this.query.skip(skip).limit(limit);\r\n\r\n    return this;\r\n  }\r\n};\r\n","const fs = require('fs');\r\n\r\nmodule.exports = function (fileName) {\r\n  file.unlink(`${__dirname}/public/img/tours/${fileName}`, (err) => {\r\n    if (err) {\r\n      console.error(`Fail to delete file on path: ${fileName}`);\r\n    }\r\n  });\r\n};\r\n","const { promisify } = require('util');\r\nconst User = require('./../models/userModel');\r\nconst catchAsync = require('./../utils/catchAsync');\r\nconst AppError = require('./../utils/appError');\r\nconst jwt = require('jsonwebtoken');\r\nconst crypto = require('crypto');\r\nconst Email = require('./../utils/email');\r\n\r\nconst signToken = (id) => {\r\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\r\n    expiresIn: process.env.JWT_EXPIRES_IN,\r\n  });\r\n};\r\n\r\nconst createAndSendToken = (user, statusCode, res) => {\r\n  user.password = undefined;\r\n  const token = signToken(user._id);\r\n\r\n  const cookieOptions = {\r\n    secure: false,\r\n    httpOnly: true,\r\n    expire: Date.now() + process.env.JWT_EXPIRES_IN || 1 * 24 * 60 * 60 * 1000,\r\n  };\r\n\r\n  res.cookie('jwt', token, cookieOptions);\r\n\r\n  res.status(statusCode).json({\r\n    status: 'success',\r\n    token,\r\n    user,\r\n  });\r\n};\r\n\r\nexports.signUp = catchAsync(async (req, res, next) => {\r\n  const newUser = await User.create({\r\n    name: req.body.name,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n    email: req.body.email,\r\n  });\r\n\r\n  if (!newUser) {\r\n    return next(new AppError('Fail to signup!', 400));\r\n  }\r\n\r\n  const url = `${req.protocol}://${req.get(`host`)}://account`;\r\n  await new Email(newUser, url).sendWelcome();\r\n\r\n  createAndSendToken(newUser, 201, res);\r\n});\r\n\r\nexports.login = catchAsync(async (req, res, next) => {\r\n  const { email, password } = req.body;\r\n\r\n  if (!email || !password) {\r\n    return next(new AppError(`Please provide email and password`, 400));\r\n  }\r\n\r\n  const user = await User.findOne({ email: email }).select('+password');\r\n\r\n  if (!user || !(await user.correctPassword(password, user.password))) {\r\n    return next(new AppError(`Invalid email or password`, 401));\r\n  }\r\n\r\n  createAndSendToken(user, 200, res);\r\n});\r\n\r\nexports.protect = catchAsync(async (req, res, next) => {\r\n  let token;\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer ')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  } else if (req.cookies.jwt) {\r\n    token = req.cookies.jwt;\r\n  }\r\n  if (!token) return next(new AppError(`Invalid token`, 401));\r\n\r\n  const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET);\r\n\r\n  const currentUser = await User.findById(decoded.id);\r\n\r\n  if (!currentUser) {\r\n    return next(\r\n      new AppError(\r\n        `The user belonging to the token doesnt not exists anymore!`,\r\n        401\r\n      )\r\n    );\r\n  }\r\n\r\n  if (await currentUser.changePasswordAfter(decoded.iat)) {\r\n    return next(\r\n      new AppError(\r\n        `Recently password has been changed! Please login again! `,\r\n        401\r\n      )\r\n    );\r\n  }\r\n\r\n  req.user = currentUser;\r\n  next();\r\n});\r\n\r\nexports.restrictTo = (...roles) => {\r\n  return (req, res, next) => {\r\n    if (!roles.includes(req.user.role)) {\r\n      return next(\r\n        new AppError('You dont have permission to peform this action!', 403),\r\n        403\r\n      );\r\n    }\r\n    next();\r\n  };\r\n};\r\n\r\nexports.forgotPassword = catchAsync(async (req, res, next) => {\r\n  const user = await User.findOne({ email: req.body.email });\r\n\r\n  if (!user) {\r\n    return next(new AppError('Wrong email adress!'), 404);\r\n  }\r\n\r\n  const resetToken = user.createPasswordResetToken();\r\n  await user.save({ validateBeforeSave: false });\r\n\r\n  try {\r\n    const resetUrl = `${req.get('origin')}/forgotPassword/${resetToken}`;\r\n    await new Email(user, resetUrl).sendPasswordReset();\r\n  } catch (error) {\r\n    user.passwordResetToken = undefined;\r\n    user.passwordResetExpires = undefined;\r\n    await user.save({ validateBeforeSave: false });\r\n    return next(\r\n      new AppError(\r\n        'There was an error sending the email. Please try again',\r\n        500\r\n      )\r\n    );\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    message: 'Token sent to email',\r\n  });\r\n});\r\n\r\nexports.resetPassword = catchAsync(async (req, res, next) => {\r\n  const cryptedToken = crypto\r\n    .createHash('sha-256')\r\n    .update(req.params.token)\r\n    .digest(`hex`);\r\n\r\n  const user = await User.findOne({\r\n    passwordResetToken: cryptedToken,\r\n    passwordResetExpires: { $gt: Date.now() },\r\n  });\r\n\r\n  if (!user) {\r\n    return next(new AppError('Invalid token recived!', 400));\r\n  }\r\n\r\n  const { password, passwordConfirm } = req.body;\r\n\r\n  user.passwordResetExpires = undefined;\r\n  user.passwordResetToken = undefined;\r\n  user.password = password;\r\n  user.passwordConfirm = passwordConfirm;\r\n\r\n  await user.save();\r\n  createAndSendToken(user, 200, res);\r\n});\r\n\r\nexports.updatePassword = catchAsync(async (req, res, next) => {\r\n  const { oldPassword, password, passwordConfirm } = req.body;\r\n\r\n  const loggedUser = await User.findById(req.user._id).select('+password');\r\n  if (!(await req.user.correctPassword(oldPassword, loggedUser.password))) {\r\n    next(new AppError('Invalid password!', 400));\r\n  }\r\n\r\n  loggedUser.password = password;\r\n  loggedUser.passwordConfirm = passwordConfirm;\r\n\r\n  await loggedUser.save();\r\n  createAndSendToken(loggedUser, 200, res);\r\n});\r\n\r\nexports.logoutUser = catchAsync(async (req, res, next) => {\r\n  res.cookie('jwt', '', { expires: new Date(0) });\r\n  res.status(200).json({\r\n    status: 'success',\r\n    message: 'Successfully logged out',\r\n  });\r\n});\r\n","const mongoose = require(`mongoose`);\r\nconst validator = require('validator');\r\nconst bcrypt = require(`bcryptjs`);\r\nconst crypto = require(`crypto`);\r\n\r\nconst userSchema = mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    trim: true,\r\n    required: [true, `Name is required!`],\r\n    minLength: [2, `Minimum length for name is 2 Characters`],\r\n    maxLength: [20, `Maximum length for name is 20 Characters`],\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, `Email is required!`],\r\n    unique: true,\r\n    trim: true,\r\n    lowerCase: true,\r\n    validate: [validator.isEmail, `Please provide a valid email address`],\r\n  },\r\n  photo: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, `Password is required!`],\r\n    minLength: [8, `Minimum length for password is 8 characters`],\r\n    maxLength: [100, `Maximum length for password is 20 characters`],\r\n    trim: true,\r\n    select: false,\r\n  },\r\n  role: {\r\n    type: String,\r\n    enum: ['user', 'guide', 'lead-guide', 'admin'],\r\n    default: 'user',\r\n  },\r\n  passwordConfirm: {\r\n    type: String,\r\n    required: [true, `Password is required!`],\r\n    minLength: [8, `Minimum length for password is 8 characters`],\r\n    maxLength: [20, `Maximum length for password is 20 characters`],\r\n    trim: true,\r\n    validate: {\r\n      validator: function (value) {\r\n        return this.password == value;\r\n      },\r\n      message: 'Password must match!',\r\n    },\r\n  },\r\n  passwordChangedAt: {\r\n    type: Date,\r\n  },\r\n  passwordResetToken: String,\r\n  passwordResetExpires: Date,\r\n  active: {\r\n    type: Boolean,\r\n    default: true,\r\n    select: false,\r\n  },\r\n});\r\n\r\nuserSchema.pre('save', async function (next) {\r\n  if (!this.isModified(`password`)) return next();\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n  this.passwordConfirm = undefined;\r\n  next();\r\n});\r\n\r\nuserSchema.pre('save', async function (next) {\r\n  if (this.isModified(`password`) || this.isNew) return next();\r\n  this.passwordChangedAt = Date.now() - 5000;\r\n  next();\r\n});\r\n\r\nuserSchema.methods.correctPassword = async function (\r\n  candidatePassword,\r\n  userPassword\r\n) {\r\n  return await bcrypt.compare(candidatePassword, userPassword);\r\n};\r\n\r\nuserSchema.methods.changePasswordAfter = async function (JWTTimeStamp) {\r\n  if (this.passwordChangedAt) {\r\n    const changedTimestamp = parseInt(\r\n      this.passwordChangedAt.getTime() / 1000,\r\n      10\r\n    );\r\n    return JWTTimeStamp < changedTimestamp;\r\n  }\r\n  return false;\r\n};\r\n\r\nuserSchema.methods.createPasswordResetToken = function () {\r\n  const resetToken = crypto.randomBytes(32).toString('hex');\r\n\r\n  this.passwordResetToken = crypto\r\n    .createHash('sha-256')\r\n    .update(resetToken)\r\n    .digest(`hex`);\r\n\r\n  this.passwordResetExpires = Date.now() + 10 * 60 * 1000;\r\n  // console.log(this.passwordResetToken, { resetToken });\r\n  return resetToken;\r\n};\r\n\r\nuserSchema.methods.cryptToken = function (token) {\r\n  return crypto.createHash('sha-256').update(token).digest('hex');\r\n};\r\n\r\nuserSchema.pre(/^find/, function (next) {\r\n  this.find({ active: true });\r\n  next();\r\n});\r\n\r\nconst User = mongoose.model('User', userSchema);\r\n\r\nmodule.exports = User;\r\n","const nodemailer = require(`nodemailer`);\r\nconst pug = require('pug');\r\nconst { convert } = require('html-to-text');\r\n\r\nmodule.exports = class Email {\r\n  constructor(user, url) {\r\n    this.to = user.email;\r\n    this.firstName = user.name.split(' ')[0];\r\n    this.url = url;\r\n    this.from = `Boris Dimitrijevic <${process.env.EMAIL_FROM}>`;\r\n  }\r\n\r\n  createTransport() {\r\n    var transport;\r\n    if (process.env.ENV_NODE === 'production') {\r\n      transport = nodemailer.createTransport({\r\n        host: '',\r\n        port: '',\r\n        auth: {\r\n          user: '',\r\n          pass: '',\r\n        },\r\n      });\r\n    } else {\r\n      transport = nodemailer.createTransport({\r\n        // service\r\n        host: 'sandbox.smtp.mailtrap.io',\r\n        port: 2525,\r\n        auth: {\r\n          user: 'e2f3c47e010096',\r\n          pass: 'a86b71d0b84b74',\r\n        },\r\n      });\r\n    }\r\n    return transport;\r\n  }\r\n\r\n  async send(template, subject) {\r\n    const html = pug.renderFile(`${__dirname}/../views/email/${template}.pug`, {\r\n      firstName: this.firstName,\r\n      url: this.url,\r\n      subject,\r\n    });\r\n\r\n    const mailOptions = {\r\n      from: this.from,\r\n      to: this.to,\r\n      html,\r\n      subject,\r\n      text: convert(html),\r\n    };\r\n\r\n    await this.createTransport().sendMail(mailOptions);\r\n  }\r\n\r\n  async sendWelcome() {\r\n    await this.send('welcome', 'Welcome to the Tours family!');\r\n  }\r\n\r\n  async sendPasswordReset() {\r\n    await this.send(\r\n      'passwordReset',\r\n      `Forgot your password? \r\n       Visit link:  ${this.url}\\nIf u didnt forget your password please ignore this email`\r\n    );\r\n  }\r\n};\r\n","const express = require('express');\r\nconst {\r\n  addReview,\r\n  updateReview,\r\n  findAllReviews,\r\n  deleteReview,\r\n  getReview,\r\n  findLoggedUserReviews,\r\n} = require(`./../controllers/reviewController`);\r\nconst { protect, restrictTo } = require(`./../controllers/authController`);\r\n\r\nconst reviewRouter = express.Router({ mergeParams: true });\r\n\r\nreviewRouter\r\n  .route('/')\r\n  .get(protect, restrictTo('admin'), findAllReviews)\r\n  .post(protect, addReview);\r\n\r\nreviewRouter.get('/me', protect, findLoggedUserReviews);\r\n\r\nreviewRouter\r\n  .route('/:id')\r\n  .delete(protect, deleteReview)\r\n  .patch(protect, updateReview)\r\n  .get(getReview);\r\n\r\nmodule.exports = reviewRouter;\r\n","const Review = require('./../models/reviewModel');\r\nconst catchAsync = require('./../utils/catchAsync');\r\nconst AppError = require('./../utils/appError');\r\nconst Tour = require('./../models/tourModel');\r\nconst factory = require('./handlerFactory');\r\n\r\nexports.updateReview = factory.updateOne(Review);\r\nexports.getReview = factory.findOne(Review);\r\nexports.findAllReviews = catchAsync(async (req, res, next) => {\r\n  const limit = req.query?.limit || 6;\r\n  const page = req.query?.page || 1;\r\n  const skip = (page - 1) * limit;\r\n\r\n  const reviews = await Review.find()\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .populate([{ path: 'user', select: ' email name photo' }]);\r\n  const totalDocuemnts = await Review.countDocuments();\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    results: reviews.length,\r\n    totalPages: Math.ceil(totalDocuemnts / req.query.limit || 6),\r\n    data: {\r\n      documents: reviews,\r\n    },\r\n  });\r\n});\r\n\r\nexports.addReview = catchAsync(async (req, res, next) => {\r\n  const tour = await Tour.findOne({\r\n    _id: req.params.tourId || req?.body.tourId,\r\n  });\r\n\r\n  if (!tour) {\r\n    next(new AppError('Invalid id for tour!', 404));\r\n  }\r\n\r\n  const review = {\r\n    user: req.user.id,\r\n    tour: req.params.tourId || req.body.tourId,\r\n    rating: req.body.rating,\r\n    review: req.body.review,\r\n  };\r\n  const savedReview = await Review.create(review);\r\n\r\n  res.status(201).json({\r\n    status: 'success',\r\n    data: {\r\n      review: savedReview,\r\n    },\r\n  });\r\n});\r\n\r\nexports.findLoggedUserReviews = catchAsync(async (req, res, next) => {\r\n  const limit = req.query?.limit || 6;\r\n  const page = req.query?.page || 1;\r\n  const skip = (page - 1) * limit;\r\n\r\n  const documents = await Review.find({ user: req.user.id })\r\n    .limit(limit)\r\n    .skip(skip);\r\n  const totalDocuments = await Review.countDocuments({ user: req.user.id });\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    results: totalDocuments,\r\n    totalPages: Math.ceil(totalDocuments / limit),\r\n    data: {\r\n      documents,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteReview = catchAsync(async (req, res, next) => {\r\n  const review = await Review.findById(req.params.id);\r\n\r\n  if (!review) {\r\n    return next(new AppError('Review doesnt exists!'), 404);\r\n  }\r\n\r\n  if (req.user.role === 'admin' || review.user === req.user.id) {\r\n    await Review.deleteOne({ _id: review._id });\r\n  } else {\r\n    return next(\r\n      new AppError('You are not allowed to delete this review!', 400)\r\n    );\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n  });\r\n});\r\n","const mongoose = require(`mongoose`);\r\nconst Tour = require('./tourModel');\r\n\r\nconst reviewSchema = mongoose.Schema(\r\n  {\r\n    review: {\r\n      type: String,\r\n      trim: true,\r\n      required: [true, `Review is required`],\r\n      minLength: [10, `Minimum length is 10 characters`],\r\n    },\r\n    rating: {\r\n      type: Number,\r\n      required: [true, `Rating is required`],\r\n      min: [1, `Minimum value is 1`],\r\n      max: [5, `Minimum value is 5`],\r\n    },\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now(),\r\n    },\r\n    tour: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'Tour',\r\n      required: [true, `Review must belong to a tour`],\r\n    },\r\n    user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'User',\r\n      required: [true, `Review must belong to a user`],\r\n    },\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\nreviewSchema.index({ tour: 1, user: 1 }, { unique: true });\r\n\r\nreviewSchema.pre(/^find/, function (next) {\r\n  this.populate([\r\n    { path: 'user', select: 'name photo' },\r\n    { path: 'tour', select: 'name' },\r\n  ]).select('-__v');\r\n\r\n  next();\r\n});\r\n\r\nreviewSchema.statics.calculateAverageRating = async function (tourId) {\r\n  const stats = await this.aggregate([\r\n    {\r\n      $match: { tour: tourId },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: '$tour',\r\n        numberOfRatings: { $sum: 1 },\r\n        avgRating: { $avg: '$rating' },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  await Tour.findByIdAndUpdate(tourId, {\r\n    ratingsQuantity: stats[0]?.numberOfRatings || 0,\r\n    averageRating: stats[0]?.avgRating || 0,\r\n  });\r\n};\r\n\r\nreviewSchema.post('save', async function () {\r\n  this.constructor.calculateAverageRating(this.tour);\r\n});\r\n\r\nreviewSchema.post(/^findOneAnd/, async function (doc) {\r\n  console.log(doc);\r\n  if (doc) await doc.constructor.calculateAverageRating(doc?.tour._id);\r\n});\r\n\r\nconst Review = mongoose.model('Review', reviewSchema);\r\n\r\nmodule.exports = Review;\r\n","const express = require('express');\r\nconst multer = require('multer');\r\nconst {\r\n  signUp,\r\n  login,\r\n  forgotPassword,\r\n  resetPassword,\r\n  updatePassword,\r\n  protect,\r\n  restrictTo,\r\n  logoutUser,\r\n} = require(`./../controllers/authController`);\r\nconst {\r\n  getUser,\r\n  updateUser,\r\n  deleteMe,\r\n  getAllUsers,\r\n  updateMe,\r\n  deleteUser,\r\n  getMe,\r\n  uploadUserPhoto,\r\n  resizeUserPhoto,\r\n  filterByRoleGuide,\r\n} = require(`./../controllers/userController`);\r\n\r\nconst userRouter = express.Router();\r\n\r\nuserRouter.post('/signup', signUp);\r\nuserRouter.post('/login', login);\r\n\r\nuserRouter.post('/passwordForgot', forgotPassword);\r\nuserRouter.patch('/resetPassword/:token', resetPassword);\r\nuserRouter.patch('/updatePassword', protect, updatePassword);\r\n\r\nuserRouter.use(protect);\r\nuserRouter.get('/guides', filterByRoleGuide, getAllUsers);\r\nuserRouter.get('/me', getMe, getUser);\r\nuserRouter.post('/logout', logoutUser);\r\nuserRouter.patch('/updateMe', uploadUserPhoto, resizeUserPhoto, updateMe);\r\nuserRouter.delete('/deleteMe', deleteMe);\r\n\r\nuserRouter.use(restrictTo('lead-guide', 'admin'));\r\nuserRouter.route('/').get(getAllUsers);\r\nuserRouter.route('/:id').get(getUser).patch(updateUser).delete(deleteUser);\r\n\r\nmodule.exports = userRouter;\r\n","const catchAsync = require('./../utils/catchAsync');\r\nconst AppError = require('./../utils/appError');\r\nconst User = require(`./../models/userModel`);\r\nconst factory = require('./handlerFactory');\r\nconst multer = require('multer');\r\nconst sharp = require('sharp');\r\n\r\n// const multerStorage = multer.diskStorage({\r\n//   destination: (req, file, cb) => {\r\n//     cb(null, 'public/img/users');\r\n//   },\r\n//   filename: (req, file, cb) => {\r\n//     const ext = file.mimetype.split('/')[1];\r\n//     cb(null, `user-${req.user.id}-${Date.now()}.${ext}`);\r\n//   },\r\n// });\r\n\r\nconst multerStorage = multer.memoryStorage();\r\n\r\nconst multerFilter = (req, file, cb) => {\r\n  if (file.mimetype.startsWith('image')) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(new AppError(`Not an image! Please upload only images!`, 400), false);\r\n  }\r\n};\r\n\r\nconst upload = multer({\r\n  storage: multerStorage,\r\n  fileFilter: multerFilter,\r\n});\r\n\r\nexports.uploadUserPhoto = upload.single('photo');\r\n\r\nexports.resizeUserPhoto = catchAsync(async (req, res, next) => {\r\n  if (!req.file) return next();\r\n\r\n  req.file.filename = `${req.user.id}-${Date.now()}.jpeg`;\r\n\r\n  await sharp(req.file.buffer)\r\n    .resize(500, 500)\r\n    .toFormat('jpeg')\r\n    .jpeg({ quality: 90 })\r\n    .toFile(`public/img/users/${req.file.filename}`);\r\n\r\n  next();\r\n});\r\n\r\nconst filterObject = (object, ...allowedFields) => {\r\n  const newObject = {};\r\n  Object.keys(object).forEach((el) => {\r\n    if (allowedFields.includes(el)) {\r\n      newObject[el] = object[el];\r\n    }\r\n  });\r\n  return newObject;\r\n};\r\n\r\nexports.getAllUsers = factory.findAll(User);\r\nexports.updateUser = factory.updateOne(User);\r\nexports.deleteUser = factory.deleteOne(User);\r\nexports.getUser = factory.findOne(User);\r\n\r\nexports.filterByRoleGuide = (req, res, next) => {\r\n  req.query.role = 'guide';\r\n  next();\r\n};\r\n\r\nexports.getMe = (req, res, next) => {\r\n  req.params.id = req.user.id;\r\n  next();\r\n};\r\n\r\nexports.deleteMe = catchAsync(async (req, res, next) => {\r\n  await User.findByIdAndDelete(req.user.id);\r\n\r\n  res.status(204).json({\r\n    stats: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\nexports.updateMe = catchAsync(async (req, res, next) => {\r\n  if (req.body.password) {\r\n    return next(\r\n      new AppError(`User password not allowed to change in this request!`, 400)\r\n    );\r\n  }\r\n  const filteredBody = filterObject(req.body, 'name', 'email');\r\n  if (req.file) {\r\n    filteredBody.photo = req.file.filename;\r\n  }\r\n\r\n  const updatedUser = await User.findByIdAndUpdate(req.user._id, filteredBody, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  res.status(200).json({\r\n    stats: 'success',\r\n    data: {\r\n      user: updatedUser,\r\n    },\r\n  });\r\n});\r\n","const express = require('express');\r\nconst {\r\n  getCheckoutSession,\r\n  createBookingCheckout,\r\n  getMeBookings,\r\n  getAllBookingAdmin,\r\n  deleteBooking,\r\n} = require('./../controllers/bookingController');\r\nconst { protect, restrictTo } = require(`./../controllers/authController`);\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/checkout-session/:tourId', protect, getCheckoutSession);\r\nrouter.post('/create-checkout-booking', protect, createBookingCheckout);\r\n\r\nrouter.get(\r\n  '/all',\r\n  protect,\r\n  restrictTo('admin', 'lead-guide'),\r\n  getAllBookingAdmin\r\n);\r\nrouter.delete('/:id', protect, restrictTo('admin'), deleteBooking);\r\n\r\nrouter.get('/', protect, getMeBookings);\r\nmodule.exports = router;\r\n","const stripe = require(`stripe`)(\r\n  'sk_test_51PHRqMBN6CjUTslEk0VW2yNGfEnxS4QB1sSG6RbYVd6oPJl1rhoA4mMeUVB5v68xaSyKp5kW50y3i7O45sVPsdNe00SKtQ7zC3'\r\n);\r\nconst catchAsync = require('./../utils/catchAsync');\r\nconst AppError = require('./../utils/appError');\r\nconst Tour = require('../models/tourModel');\r\nconst Booking = require('../models/bookingModel');\r\nconst factory = require('./handlerFactory');\r\n\r\nexports.getCheckoutSession = catchAsync(async (req, res, next) => {\r\n  const tour = await Tour.findById(req.params.tourId);\r\n\r\n  if (!tour) {\r\n    return next(\r\n      new AppError(`Tour with id ${req.params.tourId} doesnt exists!`, 400)\r\n    );\r\n  }\r\n\r\n  const session = await stripe.checkout.sessions.create({\r\n    payment_method_types: ['card'],\r\n    mode: 'payment',\r\n    // success_url: `http://localhost:5173/account/bookings?tour=${req.params.tourId}&user=${req.user.id}&price=${tour.price}`,\r\n    success_url: `http://localhost:5173/account/bookings?payment=success`,\r\n    cancel_url: `http://localhost:5173/account/bookings?payment=error`,\r\n    customer_email: req.user.email,\r\n    client_reference_id: req.params.tourId,\r\n    line_items: [\r\n      {\r\n        price_data: {\r\n          currency: 'usd',\r\n          product_data: {\r\n            name: `${tour.name} Tour`,\r\n            description: tour.summary,\r\n            images: [`https://www.natours.dev/img/tours/tour-2-cover.jpg`],\r\n          },\r\n          unit_amount: tour.price * 100,\r\n        },\r\n        quantity: 1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    session,\r\n  });\r\n});\r\n\r\nexports.createBookingCheckout = catchAsync(async (req, res, next) => {\r\n  const { user, tour, price } = req.body;\r\n\r\n  //this is temporary\r\n  if (!user || !tour || !price) {\r\n    return next(new AppError('Missing body parts!', 400));\r\n  }\r\n\r\n  const booking = {\r\n    user,\r\n    tour,\r\n    price,\r\n  };\r\n\r\n  const savedBooking = await Booking.create(booking);\r\n\r\n  if (!savedBooking) {\r\n    return next(new AppError('Fail to create booking', 400));\r\n  }\r\n\r\n  res.status(201).json({\r\n    status: 'success',\r\n    data: {\r\n      booking: savedBooking,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getMeBookings = catchAsync(async (req, res, next) => {\r\n  const bookings = await Booking.find({ user: req.user.id })\r\n    .limit(req.query.limit)\r\n    .skip(req.query.page * req.query.limit);\r\n\r\n  const totalDocuments = await Booking.countDocuments({ user: req.user.id });\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    results: bookings,\r\n    totalPages: Math.ceil(totalDocuments / bookings?.length),\r\n    data: {\r\n      bookings,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getAllBookingAdmin = factory.findAll(Booking);\r\nexports.deleteBooking = factory.deleteOne(Booking);\r\n","const mongoose = require('mongoose');\r\n\r\nconst bookingSchema = mongoose.Schema(\r\n  {\r\n    tour: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'Tour',\r\n      required: [true, 'Booking must belong to tour!'],\r\n    },\r\n    user: {\r\n      type: mongoose.Schema.ObjectId,\r\n      ref: 'User',\r\n      required: [true, 'Booking must belong to user!'],\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: [true, 'Booking must have a price!'],\r\n    },\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now(),\r\n    },\r\n    paid: {\r\n      type: Boolean,\r\n      required: [true, 'Bookign must have information is it paid!'],\r\n      default: true,\r\n    },\r\n  },\r\n  {\r\n    toJson: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\nbookingSchema.pre(/^find/, function (next) {\r\n  this.populate([\r\n    { path: 'tour' },\r\n    { path: 'user', select: 'photo _id name email' },\r\n  ]);\r\n  next();\r\n});\r\n\r\nconst Booking = mongoose.model('Booking', bookingSchema);\r\n\r\nmodule.exports = Booking;\r\n"],"names":["$4b0530f0db6c92c2$export$b4cc9a7f549f80be","$4b0530f0db6c92c2$export$3f01106131746282","$4b0530f0db6c92c2$export$50d3287e26916b45","$4b0530f0db6c92c2$export$95c4b71b6433cd9b","$4b0530f0db6c92c2$export$1b246d2f2efdafde","$4b0530f0db6c92c2$export$d69096d795185aac","$4b0530f0db6c92c2$export$bfbdf151c05dbde1","$4b0530f0db6c92c2$export$a2d3e092b567a307","$4b0530f0db6c92c2$export$9f2360ce38e60765","$4b0530f0db6c92c2$export$e56d289ae250f301","$08221df7480992de$export$36a479340da3c347","$08221df7480992de$export$3220ead45e537228","$08221df7480992de$export$a541876d5d7daf90","$08221df7480992de$export$18200ea6c8035394","$1e320d355e538560$export$cf64224bcd829024","$1e320d355e538560$export$596d806903d1f59e","$1e320d355e538560$export$eda7ca9e36571553","$1e320d355e538560$export$e1bac762c84d3b0c","$1e320d355e538560$export$66791fb2cfeec3e","$1e320d355e538560$export$dc726c8e334dd814","$1e320d355e538560$export$e2853351e15b7895","$1e320d355e538560$export$e8df664d4863167e","$96fcd635098cdec2$export$7019c694ef9e681d","$96fcd635098cdec2$export$c3d3086f9027c35a","$96fcd635098cdec2$export$e608de25c1f33a63","$96fcd635098cdec2$export$757c0bd9156f0e39","$96fcd635098cdec2$export$122fa6d5636ec306","$96fcd635098cdec2$export$189a68d831f3e4ec","$ee27b59a692bfd7f$export$6dfd280b9fe74301","$ee27b59a692bfd7f$export$9308575f5c1b4b50","$ee27b59a692bfd7f$export$69093b9c569a5b5b","$ee27b59a692bfd7f$export$e3ac7a5d19605772","$ee27b59a692bfd7f$export$7d0f10f273c0438a","$ee27b59a692bfd7f$export$7cbf767827cd68ba","$ee27b59a692bfd7f$export$6bd42d7e8fd0055d","$ee27b59a692bfd7f$export$dd7946daa6163e94","$ee27b59a692bfd7f$export$8788023029506852","$ee27b59a692bfd7f$export$8ddaddf355aae59c","$0a72fb45c37702e8$export$f1c4cda49673848c","$0a72fb45c37702e8$export$397675b10323feca","$0a72fb45c37702e8$export$e7496fa7d46188bf","$0a72fb45c37702e8$export$cfb65022ba42b2b3","$0a72fb45c37702e8$export$b7b1ce5fabd1b486","$drGtS$path","require","$drGtS$express","$drGtS$morgan","$drGtS$dotenv","$drGtS$expressratelimit","$drGtS$helmet","$drGtS$expressmongosanitize","$drGtS$xssclean","$drGtS$hpp","$drGtS$cors","$drGtS$cookieparser","$drGtS$compression","$drGtS$sharp","$drGtS$multer","$drGtS$mongoose","$drGtS$slugify","$drGtS$util","$drGtS$jsonwebtoken","$drGtS$crypto","$drGtS$validator","$drGtS$bcryptjs","$drGtS$nodemailer","$drGtS$pug","$drGtS$htmltotext","$drGtS$stripe","$d625cecd33a9d787$var$$parcel$__dirname","resolve","__dirname","$8126ef366f855a8b$exports","Error","constructor","message","statusCode","status","startsWith","isOperational","captureStackTrace","$0298fd9c5984ce66$exports","$0298fd9c5984ce66$var$sendErrorDevlopment","err","res","json","error","stack","$0298fd9c5984ce66$var$sendErrorProduction","mesage","$0298fd9c5984ce66$var$handleCastErrorDB","value","$0298fd9c5984ce66$var$handleUniquenessErroDB","fieldValue","Object","keys","errorResponse","keyPattern","keyValue","$0298fd9c5984ce66$var$handleValidationErrorDB","errorFields","errors","errorMessages","forEach","field","$0298fd9c5984ce66$var$handleJwtSignatureError","$0298fd9c5984ce66$var$handleJwtExpirationError","req","next","name","code","process","env","NODE_ENV","$6f3a8b2bb9a5a886$exports","$0a0cb2471ded67f3$exports","$0a0cb2471ded67f3$var$tourSchema","Schema","slug","type","String","required","minLength","maxLength","unique","trim","duration","Number","min","difficulty","enum","values","ratingsAverage","default","max","ratingsQuantity","price","maxGroupSize","summary","description","imageCover","images","startDates","Date","priceDiscount","validate","validator","secretTour","Boolean","startLocation","coordinates","address","locations","cordinates","day","guides","ObjectId","ref","toJSON","virtuals","getter","toObject","index","virtual","get","foreignField","localField","pre","lower","start","now","populate","path","select","post","documents","console","log","pipeline","unshift","$match","$ne","model","$3b428b33c352f09e$exports","fn","catch","$1577ff2434c4d1ff$exports","queryObject","query","filter","fieldToExclude","queryStr","JSON","stringify","replace","match","find","parse","sort","sortBy","split","join","limitFields","fields","fieldToSelect","paginate","page","limit","skip","Model","findByIdAndDelete","params","id","data","document","findByIdAndUpdate","body","new","runValidators","populateOptions","findById","tourId","tour","features","totalDocuments","countDocuments","results","totalPages","Math","ceil","$86a232f75d8a24d5$exports","$86a232f75d8a24d5$var$$parcel$__dirname","fileName","file","unlink","$4b0530f0db6c92c2$var$multerStorage","memoryStorage","$4b0530f0db6c92c2$var$upload","storage","fileFilter","cb","mimetype","maxCount","files","buffer","resize","toFormat","jpeg","quality","toFile","Promise","all","map","push","oldImages","oldImageCover","savedOrUpdatedTour","_id","create","image","stats","aggregate","$gte","$group","$toUpper","num","$sum","numRatings","avgPrice","$avg","minPrice","$min","maxPrice","$max","year","plan","$unwind","$lte","$month","sum","tours","$push","$addFields","month","$project","$sort","$limit","length","findOne","$1e320d355e538560$require$promisify","promisify","$ac6ef53db338fdf8$exports","$ac6ef53db338fdf8$var$userSchema","email","lowerCase","isEmail","photo","password","role","passwordConfirm","passwordChangedAt","passwordResetToken","passwordResetExpires","active","isModified","hash","undefined","isNew","methods","correctPassword","candidatePassword","userPassword","compare","changePasswordAfter","JWTTimeStamp","parseInt","getTime","createPasswordResetToken","resetToken","randomBytes","toString","createHash","update","digest","cryptToken","token","$7a8f20b4fa4383dd$exports","$7a8f20b4fa4383dd$var$$parcel$__dirname","$7a8f20b4fa4383dd$require$convert","convert","user","url","to","firstName","from","EMAIL_FROM","createTransport","transport","ENV_NODE","host","port","auth","pass","send","template","subject","html","renderFile","mailOptions","text","sendMail","sendWelcome","sendPasswordReset","$1e320d355e538560$var$signToken","sign","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","$1e320d355e538560$var$createAndSendToken","cookieOptions","secure","httpOnly","expire","cookie","newUser","protocol","headers","authorization","cookies","jwt","decoded","verify","currentUser","iat","roles","includes","save","validateBeforeSave","resetUrl","cryptedToken","$gt","oldPassword","loggedUser","expires","$0a75861df4d08a91$exports","$3a32068f0afde828$exports","$3a32068f0afde828$var$reviewSchema","review","rating","createdAt","statics","calculateAverageRating","numberOfRatings","avgRating","averageRating","doc","reviews","totalDocuemnts","savedReview","deleteOne","$0a75861df4d08a91$var$reviewRouter","Router","mergeParams","route","$0a75861df4d08a91$require$restrictTo","delete","patch","$6f3a8b2bb9a5a886$var$tourRouter","use","$6f3a8b2bb9a5a886$require$restrictTo","$3b09ff5b97016e05$exports","$ee27b59a692bfd7f$var$multerStorage","$ee27b59a692bfd7f$var$upload","single","filename","$ee27b59a692bfd7f$var$filterObject","object","allowedFields","newObject","el","filteredBody","updatedUser","$3b09ff5b97016e05$var$userRouter","$3b09ff5b97016e05$require$restrictTo","$27725f377c41720f$exports","$0a72fb45c37702e8$var$stripe","$d755f882496b8e67$exports","$d755f882496b8e67$var$bookingSchema","paid","toJson","session","checkout","sessions","payment_method_types","mode","success_url","cancel_url","customer_email","client_reference_id","line_items","price_data","currency","product_data","unit_amount","quantity","savedBooking","booking","bookings","$27725f377c41720f$var$router","$27725f377c41720f$require$restrictTo","$d625cecd33a9d787$var$app","origin","credentials","options","config","$d625cecd33a9d787$var$limiter","windowMs","static","whitelist","originalUrl","module","exports"],"version":3,"file":"app.js.map","sourceRoot":"../../../"}